/*
 * restaurant.proto
 *
 * This source file is part of the FoundationDB open source project
 *
 * Copyright 2021-2024 Apple Inc. and the FoundationDB project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package com.apple.foundationdb.record.test4;

option java_package = "com.apple.foundationdb.record";
option java_outer_classname = "Restaurant";

import "record_metadata_options.proto";

message RestaurantReviewer {
  int64 id = 1 [(com.apple.foundationdb.record.field).primary_key = true];
  string name = 2 [(com.apple.foundationdb.record.field).index = {}];
  string email = 3;
  ReviewerStats stats = 4;
}

message ReviewerStats {
  int64 start_date = 1;

  string school_name = 2;
  string hometown = 3;
}

message RestaurantReview {
  option (com.apple.foundationdb.record.record).usage = NESTED;
  int64 reviewer = 1;
  int64 rating = 2;
}

message RestaurantTag {
  option (com.apple.foundationdb.record.record).usage = NESTED;
  string tag = 1;
  int32 weight = 2;
}

message RestaurantRecord {
  int64 rest_no = 1 [(com.apple.foundationdb.record.field).primary_key = true];
  string name = 2 [(com.apple.foundationdb.record.field).index = {}];
  Location location = 3;
  repeated RestaurantReview reviews = 4;
  repeated RestaurantTag tags = 5;
  repeated string customer = 6;
}

message Location {
  option (com.apple.foundationdb.record.record).usage = NESTED;
  string address = 1;
  string latitude = 2;
  string longitude = 3;
}

message UnionDescriptor {
  option (com.apple.foundationdb.record.record).usage = UNION;
  RestaurantRecord _RestaurantRecord = 1;
  RestaurantReviewer _RestaurantReviewer = 2;
}