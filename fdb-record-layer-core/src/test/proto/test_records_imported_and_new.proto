/*
 * test_records_imported_and_new.proto
 *
 * This source file is part of the FoundationDB open source project
 *
 * Copyright 2015-2019 Apple Inc. and the FoundationDB project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package com.apple.foundationdb.record.test.importedandnew;

option java_package = "com.apple.foundationdb.record";
option java_outer_classname = "TestRecordsImportedAndNewProto";

import "test_records_1.proto";
import "record_metadata_options.proto";

// Note that this name is the same as the imported record, but that this
// is a nested type, so there shouldn't be a name clash problem.
message MySimpleRecord {
    option (record).usage = NESTED;
    optional int64 val = 1;
}

message MyOtherRecord {
    optional int64 rec_no = 1 [(field).primary_key = true];
    optional int32 num_value_3_indexed = 2 [(field).index = {}];
    optional MySimpleRecord simple = 3;
}

message RecordTypeUnion {
    optional test1.MySimpleRecord _MySimpleRecord = 1;
    optional MyOtherRecord _MyOtherRecord = 2;
}
