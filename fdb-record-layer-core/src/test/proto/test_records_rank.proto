/*
 * test_records_rank.proto
 *
 * This source file is part of the FoundationDB open source project
 *
 * Copyright 2015-2018 Apple Inc. and the FoundationDB project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package com.apple.foundationdb.record.testrank;

option java_package = "com.apple.foundationdb.record";
option java_outer_classname = "TestRecordsRankProto";

import "record_metadata_options.proto";

message BasicRankedRecord {
  required string name = 1 [(field).primary_key = true];
  optional int32 score = 2 [(field).index = { type: "rank" }];
  optional string gender = 3;
}

message NestedRankedRecord {
  required string name = 1 [(field).primary_key = true];
  optional string country = 2;
  message GameScore {
    optional string game = 1;
    optional string tier = 2;
    optional double score = 3;
  }
  repeated GameScore scores = 3;
}

// The primary key of this record type is set in test (RankIndexTest).
message HeaderRankedRecord {
  message Header {
    required string group = 1;
    required int32 id = 2;
  }
  optional Header header = 1;
  optional int32 score = 2 [(field).index = { type: "rank" }];
}

message RepeatedRankedRecord {
  required string name = 1 [(field).primary_key = true];
  repeated int32 score = 2;
}

message RecordTypeUnion {
  optional BasicRankedRecord _BasicRankedRecord = 1;
  optional NestedRankedRecord _NestedRankedRecord = 2;
  optional HeaderRankedRecord _HeaderRankedRecord = 3;
  optional RepeatedRankedRecord _RepeatedRankedRecord = 4;
}
