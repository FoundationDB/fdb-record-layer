/*
 * publishing.gradle
 *
 * This source file is part of the FoundationDB open source project
 *
 * Copyright 2015-2018 Apple Inc. and the FoundationDB project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.jfrog.bintray'

// Add various details to the pom file to allow for publishing
def addPublishingInfo(publication) {
    publication.pom {
        name = project.name
        url = 'https://foundationdb.github.io/fdb-record-layer/'

        licenses {
            license {
                name = 'The Apache License, Version 2.0'
                url = 'https://www.apache.org/licenses/LICENSE-2.0'
            }
        }

        developers {
            developer {
                name = 'FoundationDB'
            }
        }

        scm {
            url = 'https://github.com/FoundationDB/fdb-record-layer/'
            connection = 'scm:git:git@github.com:FoundationDB/fdb-record-layer.git'
            developerConnection = 'scm:git:git@github.com:FoundationDB/fdb-record-layer.git'
        }
    }
}

ext {
    // Make the "addPublishingInfo" method visible from outside this plugin
    addPublishingInfo = this.&addPublishingInfo
}

publishing {
    publications {
        library(MavenPublication) { publication ->
            from components.java
            artifact tasks.sourcesJar
            artifact tasks.javadocJar
            addPublishingInfo(publication)
        }
    }
    def publishBuild = Boolean.parseBoolean(findProperty('publishBuild') ?: 'false')
    if (publishBuild && System.getenv('BINTRAY_USER') != null && System.getenv('BINTRAY_KEY') != null) {
        def isReleaseBuild = Boolean.parseBoolean(findProperty('releaseBuild') ?: 'false')
        bintray {
            user = System.getenv('BINTRAY_USER')
            key = System.getenv('BINTRAY_KEY')
            publications = ["library"]
            pkg {
                version{
                    name = project.name
                }
                userOrg = "fdb-apple"
                repo = "fdb-record-layer"
                name = project.name
                licenses = ["Apache-2.0"]
                vcsUrl = "https://github.com/FoundationDB/fdb-record-layer.git"
            }
            override = !isReleaseBuild
            publish = publishBuild
        }
    }
}

createDistribution.configure {
    afterEvaluate {
        dependsOn generatePomFileForLibraryPublication
        from tasks.jar, tasks.sourcesJar, tasks.javadocJar, tasks.generatePomFileForLibraryPublication
        rename { filename ->
            GenerateMavenPom pomTask = tasks.generatePomFileForLibraryPublication
            Jar jarTask = tasks.jar
            if (filename == pomTask.destination.name) {
                jarTask.archiveName.replace "jar", "pom"
            } else {
                filename
            }
        }
    }
}
