name: Setup FDB

inputs:
  fdb_version:
    description: 'Version of FDB to run'
    required: false
    default: "7.3.42"

runs:
  using: "composite"
  steps:
    - name: Set FDB Filenames
      id: fdb_filenames
      shell: bash
      run: |
        echo "client_deb=foundationdb-clients_${{ inputs.fdb_version }}-1_amd64.deb" >> "${GITHUB_OUTPUT}"
        echo "server_deb=foundationdb-server_${{ inputs.fdb_version }}-1_amd64.deb" >> "${GITHUB_OUTPUT}"
    - name: Check FDB Binaries Cache
      id: cache_fdb
      uses: actions/cache@v3
      with:
        path: ~/.fdb-cache
        key: ${{ runner.os }}-fdb-debs-${{ inputs.fdb_version }}
    - name: Download FDB Binaries
      if: steps.cache_fdb.outputs.cache-hit != 'true'
      shell: bash
      run: |
        mkdir -p ~/.fdb-cache
        wget -O ~/.fdb-cache/${{ steps.fdb_filenames.outputs.client_deb }} -nv https://github.com/apple/foundationdb/releases/download/${{ inputs.fdb_version }}/${{ steps.fdb_filenames.outputs.client_deb }}
        wget -O ~/.fdb-cache/${{ steps.fdb_filenames.outputs.server_deb }} -nv https://github.com/apple/foundationdb/releases/download/${{ inputs.fdb_version }}/${{ steps.fdb_filenames.outputs.server_deb }}
    - name: Install FDB Server
      shell: bash
      run: sudo dpkg -i ~/.fdb-cache/${{ steps.fdb_filenames.outputs.client_deb }} ~/.fdb-cache/${{ steps.fdb_filenames.outputs.server_deb }}
    - name: Stop default fdb
      shell: bash
      run: sudo service foundationdb stop

    - name: Create cluster1 config
      shell: bash
      run: |
        sudo cp /etc/foundationdb/foundationdb.conf /etc/foundationdb/foundationdb1.conf

        sudo sed -i -e "s/\/etc\/foundationdb\/fdb.cluster/\/etc\/foundationdb\/fdb1.cluster/g" \
        -e "s/\/var\/log\/foundationdb/\/var\/log\/foundationdb1/" \
        -e "s/fdbserver.4500/fdbserver.4600/g" \
        /etc/foundationdb/foundationdb1.conf
        
        sudo bash -c "echo 'fdb1:$(mktemp -u XXXXXXXX)@127.0.0.1:4600' > /etc/foundationdb/fdb1.cluster"
    - name: Create cluster2 config
      shell: bash
      run: |
        sudo cp /etc/foundationdb/foundationdb.conf /etc/foundationdb/foundationdb2.conf
        
        sudo sed -i -e "s/\/etc\/foundationdb\/fdb.cluster/\/etc\/foundationdb\/fdb2.cluster/g" \
        -e "s/\/var\/log\/foundationdb/\/var\/log\/foundationdb2/" \
        -e "s/fdbserver.4500/fdbserver.4700/g" \
        /etc/foundationdb/foundationdb2.conf
        
        sudo bash -c "echo 'fdb2:$(mktemp -u XXXXXXXX)@127.0.0.1:4700' > /etc/foundationdb/fdb2.cluster"

    - name: create dirs & set permissions
      shell: bash
      run: |
        sudo mkdir /var/log/foundationdb1 /var/log/foundationdb2
        sudo chown foundationdb:foundationdb /etc/foundationdb/fdb1.cluster /etc/foundationdb/fdb2.cluster /var/log/foundationdb1 /var/log/foundationdb2
        sudo chmod 664 /etc/foundationdb/fdb1.cluster /etc/foundationdb/fdb2.cluster
        sudo chmod 700 /var/log/foundationdb1 /var/log/foundationdb2

    - name: Start FDB Server 1
      shell: bash
      run: sudo /usr/lib/foundationdb/fdbmonitor --conffile /etc/foundationdb/foundationdb1.conf --lockfile /var/run/fdbmonitor1.pid --loggroup fdb1 --daemonize
    - name: Start FDB Server 2
      shell: bash
      run: sudo /usr/lib/foundationdb/fdbmonitor --conffile /etc/foundationdb/foundationdb2.conf --lockfile /var/run/fdbmonitor2.pid --loggroup fdb2 --daemonize

    - name: Switch FDB 1 to SSD
      shell: bash
      run: fdbcli -C /etc/foundationdb/fdb1.cluster --exec "configure new single ssd storage_migration_type=aggressive; status"
    - name: Switch FDB 2 to SSD
      shell: bash
      run: fdbcli -C /etc/foundationdb/fdb2.cluster --exec "configure new single ssd storage_migration_type=aggressive; status"
    - name: Create fdb-environment.yaml
      shell: bash
      run: |
        echo "clusterFiles: " >> fdb-environment.yaml
        echo "  - /etc/foundationdb/fdb1.cluster" >> fdb-environment.yaml
        echo "  - /etc/foundationdb/fdb2.cluster" >> fdb-environment.yaml
