/*
 * UUIDUtilsTest.java
 *
 * This source file is part of the FoundationDB open source project
 *
 * Copyright 2015-2023 Apple Inc. and the FoundationDB project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.apple.foundationdb.util;

import org.junit.jupiter.api.RepeatedTest;
import org.junit.jupiter.api.Test;

import java.util.Random;
import java.util.UUID;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;

/**
 * Test of the {@link UUIDUtils} class.
 */
public class UUIDUtilsTest {
    @RepeatedTest(value = 20, name = "generateCorrectVersion[{currentRepetition}]")
    void generateCorrectVersion() {
        UUID javaRandomUuid = UUID.randomUUID();
        UUID customRandomUuid = UUIDUtils.random();
        assertEquals(javaRandomUuid.version(), customRandomUuid.version(), "random UUID version should match UUID.randomUUID's variant");
    }

    @RepeatedTest(value = 20, name = "generateCorrectVariant[{currentRepetition}]")
    void generateCorrectVariant() {
        UUID javaRandomUuid = UUID.randomUUID();
        UUID customRandomUuid = UUIDUtils.random();
        assertEquals(javaRandomUuid.variant(), customRandomUuid.variant(), "random UUID variant should match UUID.randomUUID's variant");
    }

    @RepeatedTest(value = 40, name = "shouldBeUnique[{currentRepetition}]")
    void shouldBeUnique() {
        UUID uuid1 = UUIDUtils.random();
        UUID uuid2 = UUIDUtils.random();
        assertNotEquals(uuid1, uuid2, "Two UUIDs generated by the same random source should be different");
    }

    @Test
    void shouldBeDeterministic() {
        Random r1 = new Random(0x5eed);
        Random r2 = new Random(0x5eed);

        UUID u1a = UUIDUtils.random(r1);
        UUID u2a = UUIDUtils.random(r2);
        assertEquals(u1a, u2a, "UUIDs generated from random number generators with the same seed should be identical");

        UUID u1b = UUIDUtils.random(r1);
        UUID u2b = UUIDUtils.random(r2);
        assertEquals(u1b, u2b, "UUIDs generated from random number generators with the same seed should be identical");

        assertNotEquals(u1a, u1b, "UUIDs from the same random source should be different");
        assertNotEquals(u2a, u2b, "UUIDs from the same random source should be different");
    }
}
