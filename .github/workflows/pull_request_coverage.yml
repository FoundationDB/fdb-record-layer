name: Pull Request Coverage

on:
  workflow_run:
    workflows: [Pull Request]
    types:
      - completed

jobs:
  download:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    permissions:
      checks: read
      contents: read
    steps:
      - name: Checkout HEAD sources
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Setup Base Environment
        uses: ./actions/setup-base-env
      - name: 'Download artifacts'
        uses: actions/github-script@v7
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchingArtifacts = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name.endsWith('-coverage-data');
            });
            const fs = require('fs');
            for (matchingArtifact of matchingArtifacts) {
              core.info(`Downloading ${matchingArtifact.name}.`);
              let download = await github.rest.actions.downloadArtifact({
                 owner: context.repo.owner,
                 repo: context.repo.repo,
                 artifact_id: matchingArtifact.id,
                 archive_format: 'zip',
              });
              fs.writeFileSync(`${{ github.workspace }}/${ matchingArtifact.name }.zip`, Buffer.from(download.data));
            }
      - name: 'Unzip artifacts'
        run: for file in *-coverage-data.zip; do unzip $file; done
      - name: Run JaCoCo Report
        uses: ./actions/run-gradle
        with:
          gradle_command: codeCoverageReport
      - name: Publish Coverage Report
        uses: actions/upload-artifact@v4.6.0
        with:
          name: coverage-report
          path: |
            ${{ github.workspace }}/.out/reports/jacoco/codeCoverageReport/
