name: Release

on:
  workflow_dispatch:

jobs:
  # TOODO how do I ensure that nothing is running on a different commit
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4.2.2
      - name: Release Test
        uses: ./action/release-test
  mixed-mode-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4.2.2
      - name: Mixed Mode Test
        uses: ./actions/mixed-mode-test
  publish:
    needs: [test, mixed-mode-test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4.2.2
        with:
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          fetch-tags: true
          # fetch all the history to make sure that we have the last release
          # I tried fetching part of the history, but I just couldn't get it to work, and fetching all still takes like 5s
          fetch-depth: 0
      - name: Publish
        uses: ./action/release-publish
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          update_type: BUILD
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_USER: ${{ secrets.MAVEN_USER }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      # Build documentation (We don't do this for patch releases)
      - name: Cache Python Environment
        uses: actions/cache@v4
        with:
          path: docs/sphinx/.venv
          key: ${{ runner.os }}-sphinx-python-${{ steps.setup-base.outputs.python-version }}-${{ hashFiles('docs/sphinx/requirements.txt') }}
      - name: Build Documentation Site
        uses: ./actions/run-gradle
        with:
          gradle_command: documentationSite -PreleaseBuild=true
      - name: Upload Documentation
        id: doc_upload
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/sphinx/.out/html/

  deploy_docs: # Is this supposed to be done in parallel ?
    runs-on: ubuntu-latest
    needs: [publish]
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.doc_upload.outputs.page_url }}
    steps:
      - name: Deploy Documentation
        uses: actions/deploy-pages@v4
