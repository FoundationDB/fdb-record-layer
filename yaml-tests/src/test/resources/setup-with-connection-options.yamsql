#
# setup-with-connection-options.yamsql
#
# This source file is part of the FoundationDB open source project
#
# Copyright 2021-2025 Apple Inc. and the FoundationDB project authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This test confirms the capability of setting connection options for setup blocks and transactional setups.
---
options:
  supported_version: 4.7.1.0
---
setup:
  options:
    connection_options:
      CASE_SENSITIVE_IDENTIFIERS: true
  connect: "jdbc:embed:/__SYS?schema=CATALOG"
  steps:
    - query: drop schema template if exists case_sensitive_template
    - query: create schema template case_sensitive_template
        create table TaBlE1(x bigint, y string, primary key(x))
    - query: drop database if exists /FRL/CASE_SENSITIVE_TEMPLATE
    - query: create database /FRL/CASE_SENSITIVE_TEMPLATE
    - query: create schema /FRL/CASE_SENSITIVE_TEMPLATE/test with template case_sensitive_template
---
setup:
  options:
    connection_options:
      CASE_SENSITIVE_IDENTIFIERS: true
  connect: "jdbc:embed:/FRL/CASE_SENSITIVE_TEMPLATE?schema=test"
  steps:
    - query: insert into TaBlE1 values (1, 'foo'), (2, 'bar'), (3, 'blah')
---
test_block:
  name: transaction-with-connection-options
  connect: "jdbc:embed:/FRL/CASE_SENSITIVE_TEMPLATE?schema=test"
  options:
    supported_version: 4.7.1.0
    connection_options:
      CASE_SENSITIVE_IDENTIFIERS: true
  tests:
    -
      # This ensures that the CASE_SENSITIVE_IDENTIFIERS connection option is being passed correctly in the query
      # and the transactional setup.
      - query: select * from Func1
      - setup: create temporary function Func1() on commit drop function as
          select * from TaBlE1 where x >= 2;
      - unorderedResult: [{x: 2, y: 'bar'},
                          {x: 3, y: 'blah'}]
...