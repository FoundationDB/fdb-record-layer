#
# arrays.yamsql
#
# This source file is part of the FoundationDB open source project
#
# Copyright 2021-2024 Apple Inc. and the FoundationDB project authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
schema_template:
    create table A(pk integer, x integer array, primary key(pk))
    create table B(pk integer, x string array, primary key(pk))
    create table C(pk integer, x double array, primary key(pk))
    create type as struct S(f integer)
    create table D(pk integer, x S array, primary key(pk))
    create type as struct T(x integer, y double)
    create table E(pk integer, x T array, primary key(pk))
    create type as struct U(x integer, y double, z integer array)
    create table F(pk integer, x U array, primary key(pk))
    create table G(pk integer, x string array, primary key(pk))
---
test_block:
  name: arrays-tests
  preset: single_repetition_ordered
  tests:
    -
      - query: INSERT INTO A VALUES (1, [1, 2, 3]), (2, [2, 3, 4]), (3, [3, 4, 5])
      - count: 3
    -
      - query: SELECT * FROM A
      - result: [{1, [1, 2, 3]}, {2, [2, 3, 4]}, {3, [3, 4, 5]}]
    -
      - query: INSERT INTO B VALUES (1, ['a', 'b', 'c']), (2, ['b', 'c', 'd']), (3, ['c', 'd', 'e'])
      - count: 3
    -
      - query: INSERT INTO C VALUES (1, [1.1, 2.1, 3.1]), (2, [2.1, 3.1, 4.1]), (3, [3.1, 4.1, 5.1])
      - count: 3
    -
      - query: select x from c
      - result: [{[1.1, 2.1, 3.1]}, {[2.1, 3.1, 4.1]}, {[3.1, 4.1, 5.1]}]
    -
      - query: INSERT INTO D VALUES (1, [(1), (2), (3)]), (2, [(2), (3), (4)]), (3, [(3), (4), (5)])
      - count: 3
    -
      - query: INSERT INTO E VALUES (1, [(1, 1.0), (2, 2.0), (3, 3.0)]), (2, [(2, 2.0), (3, 3.0), (4, 4.0)]), (3, [(3, 3.0), (4, 4.0), (5, 5.0)])
      - count: 3
    -
      - query: INSERT INTO F VALUES
              (1, [(1, 1.0, [1, 1, 1]), (2, 2.0, [1, 1, 1]), (3, 3.0, [1, 1, 1])]),
              (2, [(2, 2.0, [1, 1, 1]), (3, 3.0, [1, 1, 1]), (4, 4.0, [1, 1, 1])]),
              (3, [(3, 3.0, [1, 1, 1]), (4, 4.0, [1, 1, 1]), (5, 5.0, [1, 1, 1])])
      - count: 3
    -
      - query: INSERT INTO G VALUES (1, [])
      - supported_version: 4.5.13.0
      - count: 1
    -
      # "new" should not be quoted. TODO ([Post] Fix identifiers case-sensitivity matching in plan generator)
      - query: UPDATE A SET X = [11, 12, 13] WHERE PK = 1 RETURNING "new".X
      - result: [{[11, 12, 13]}]
    -
      # "new" should not be quoted. TODO ([Post] Fix identifiers case-sensitivity matching in plan generator)
      - query: UPDATE D SET X = [(11), (12), (13)] WHERE PK = 1 RETURNING "new".X
      - result: [{[{F: 11}, {F: 12}, {F: 13}]}]
    -
      - query: select X[3] from A where PK = 1
      - supported_version: 4.5.13.0
      - result: [{13}]
    -
      - query: select X[2+1] from A where PK = 1
      - supported_version: 4.5.13.0
      - result: [{13}]
    -
      - query: select X[2+1] + X[4-1] from A where PK = 1
      - supported_version: 4.5.13.0
      - result: [{26}]
    -
      - query: select pk FROM A WHERE X[1] + 0 between 0 + X[1+0] and X[1-0] - 0
      - supported_version: 4.5.13.0
      - result: [{PK: 1}, {PK: 2}, {PK: 3}]
    -
      # high-order subscript indexes are supported
      - query: select pk FROM A WHERE X[X[1] - X[1] + 1] between 0 + X[1+0] and X[1-0] - 0
      - supported_version: 4.5.13.0
      - result: [{PK: 1}, {PK: 2}, {PK: 3}]
    -
      # out of bound
      - query: select X[100000] AS ERR FROM A WHERE pk = 1
      - supported_version: 4.5.13.0
      - result: [{ERR: !null _}]
    -
      # out of bound
      - query: select X[-1] AS ERR FROM A WHERE pk = 1
      - supported_version: 4.5.13.0
      - result: [{ERR: !null _}]
    -
      # out of bound
      - query: select X[0] AS ERR FROM A WHERE pk = 1
      - supported_version: 4.5.13.0
      - result: [{ERR: !null _}]
    -
      # empty array
      - query: select X[1] AS ERR FROM G where pk = 1
      - supported_version: 4.5.13.0
      - result: [{ERR: !null _}]
    -
      # empty result
      - query: select X[1] AS F FROM G where pk = 42
      - supported_version: 4.5.13.0
      - result: []
    -
      # subscript from empty array
      - query: select cast([] as string array)[0] AS ERR FROM F where pk = 1;
      - supported_version: 4.7.3.0
      - result: [{ERR: !null _}]
...
