#
# subquery-tests.yaml
#
# This source file is part of the FoundationDB open source project
#
# Copyright 2021-2024 Apple Inc. and the FoundationDB project authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- connect: "jdbc:embed:/__SYS?schema=CATALOG"
---
- query: drop schema template subquery_tests_template
---
- query: create schema template subquery_tests_template
    create table a(ida int64, x int64, primary key(ida))
    create table x(idx int64, y int64, primary key(idx))
    CREATE TYPE AS STRUCT s(f int64)
    create table r(idr int64, nr s array, primary key(idr))
    create table b(idb int64, q int64, r int64, primary key(idb))
    create index ib as select q from b
    create index ir as select sq.f from r, (select f from r.nr) sq;
---
- query: drop database /SUBQUERY_YAML
---
- query: create database /SUBQUERY_YAML
---
- query: create schema /SUBQUERY_YAML/test with template subquery_tests_template
---
- connect: "jdbc:embed:/SUBQUERY_YAML?schema=TEST"
---
- insert: [{IDA: 1, 1},
           {IDA: 2, 2},
           {IDA: 3, 3}]
- table: A
---
- insert: [{4, 10},
           {5, 20},
           {6, 30}]
- table: X
---
- insert: [{1, [{11}, {12}, {13}]},
           {2, [{21}, {22}, {23}]},
           {3, [{31}, {32}, {33}]}]
- table: R
---
- insert: [{1, 10, 100},
           {2, 20, 200},
           {3, 30, 300}]
- table: B
---
# non correlated subquery, resolving alias should be fine.
- query: select ida from a where exists (select ida from a where ida = 1);
- result: [{!l 1}, {!l 2}, {!l 3}]
---
# this should work albeit being seemingly ambiguous
# upper query block resolution should kick in _iff_ we fail to resolve
# the identifier in current query block.
- query: select idx from x where exists (select x from a where ida = 1);
- result: [{!l 4}, {!l 5}, {!l 6}]
---
# PartiQL resolution.
- query: select idr from r, r.nr as NEST where NEST.f = 23;
- result: [{!l 2}]
---
# PartiQL resolution, another flavour (TODO check whether this still use the IR index).
- query: select idr from r, (select * from r.nr) as NEST where NEST.f = 23;
- result: [{!l 2}]
---
# correlation should _not_ be allowed in from-subquery.
- query: select x from a, (select * from r where r.idr = a.x) sq;
- error: "42F10"
---
# correlations are allowed inside a nested subquery with group by
- query: select x from a where exists (select a.x, max(idb) from b where q > a.x group by q)
- result: [{!l 1}, {!l 2}, {!l 3}]
---
# correlations are allowed inside a nested subquery with group by, not necessarily qualified
- query: select x from a where exists (select x, max(idb) from b where q > x group by q)
- result: [{!l 1}, {!l 2}, {!l 3}]
---
# correlations inside aggregations are allowed inside a nested subquery with group by
- query: select x from a where exists (select max(x), max(idb) from b where q > x group by q)
- result: [{!l 1}, {!l 2}, {!l 3}]
---
# correlations inside aggregations are allowed inside a nested subquery with group by
- query: select x from a where exists (select max(a.x), max(idb) from b where q > x group by q)
- result: [{!l 1}, {!l 2}, {!l 3}]
#---
#- query: drop schema template subquery_tests_template
---
- query: drop database /SUBQUERY_YAML
...
