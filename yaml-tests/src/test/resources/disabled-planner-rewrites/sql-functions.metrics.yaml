basic-sql-function-tests:
-   query: EXPLAIN select col1, col2 from f1(a => 103, b => 'b');
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c10 AS LONG)
        AS A, promote(@c14 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) } | MAP (_.COL1 AS COL1, _.COL2 AS COL2)'
    task_count: 1078
    task_total_time_ms: 74
    transform_count: 258
    transform_time_ms: 20
    transform_yield_count: 79
    insert_time_ms: 4
    insert_new_count: 127
    insert_reused_count: 6
-   query: EXPLAIN select col1, col2 from f1(b => 'b', a => 103);
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c14 AS LONG)
        AS A, promote(@c10 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) } | MAP (_.COL1 AS COL1, _.COL2 AS COL2)'
    task_count: 1078
    task_total_time_ms: 76
    transform_count: 258
    transform_time_ms: 20
    transform_yield_count: 79
    insert_time_ms: 4
    insert_new_count: 127
    insert_reused_count: 6
-   query: EXPLAIN select col1, col2 from f1(103, 'b');
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c8 AS LONG)
        AS A, promote(@c10 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) } | MAP (_.COL1 AS COL1, _.COL2 AS COL2)'
    task_count: 1078
    task_total_time_ms: 56
    transform_count: 258
    transform_time_ms: 10
    transform_yield_count: 79
    insert_time_ms: 2
    insert_new_count: 127
    insert_reused_count: 6
-   query: EXPLAIN select col1 + 10, col2 from f1(103, 'b');
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c10 AS LONG)
        AS A, promote(@c12 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) } | MAP (_.COL1 + @c4 AS _0, _.COL2 AS COL2)'
    task_count: 1078
    task_total_time_ms: 77
    transform_count: 258
    transform_time_ms: 22
    transform_yield_count: 79
    insert_time_ms: 4
    insert_new_count: 127
    insert_reused_count: 6
-   query: EXPLAIN select * from f1(103, 'b');
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c6 AS LONG)
        AS A, promote(@c8 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) }'
    task_count: 1080
    task_total_time_ms: 27
    transform_count: 258
    transform_time_ms: 8
    transform_yield_count: 79
    insert_time_ms: 1
    insert_new_count: 126
    insert_reused_count: 6
-   query: EXPLAIN select * from f1(103, 'b') where col1 = 101
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c6 AS LONG)
        AS A, promote(@c8 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) } | FILTER _.COL1 EQUALS promote(@c13 AS LONG)'
    task_count: 1078
    task_total_time_ms: 80
    transform_count: 258
    transform_time_ms: 22
    transform_yield_count: 79
    insert_time_ms: 4
    insert_new_count: 127
    insert_reused_count: 6
-   query: EXPLAIN select * from f1(103 + 1, 'b')
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c6 + @c8
        AS LONG) AS A, promote(@c10 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1
        [EQUALS q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]])
        | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2
        AS COL2) }'
    task_count: 1080
    task_total_time_ms: 70
    transform_count: 258
    transform_time_ms: 20
    transform_yield_count: 79
    insert_time_ms: 3
    insert_new_count: 126
    insert_reused_count: 6
-   query: EXPLAIN select * from (select * from f1(103 + 1, 'b')) as x where col1
        < 105
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c10 + @c12
        AS LONG) AS A, promote(@c14 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1
        [EQUALS q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]])
        | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2
        AS COL2) } | FILTER _.COL1 LESS_THAN promote(@c22 AS LONG)'
    task_count: 1152
    task_total_time_ms: 81
    transform_count: 272
    transform_time_ms: 22
    transform_yield_count: 81
    insert_time_ms: 4
    insert_new_count: 130
    insert_reused_count: 6
-   query: EXPLAIN select A.col1 AS W, A.col2 AS X, B.col1 AS Y, B.col2 AS Z from
        f1(103, 'b') A, f1(103, 'b') B where A.col1 = B.col1
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c28 AS LONG)
        AS A, promote(@c30 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) } | FLATMAP q2 -> { TF range(0l, promote(1l AS LONG), STEP 1l) | MAP
        (promote(@c28 AS LONG) AS A, promote(@c30 AS STRING) AS B) | FLATMAP q3 ->
        { COVERING(T1_IDX1 [EQUALS q3.B, [LESS_THAN q3.A]] -> [COL1: KEY[1], COL2:
        KEY[0], COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q4 RETURN
        (q4.COL1 AS COL1, q4.COL2 AS COL2) } | FILTER q2.COL1 EQUALS _.COL1 AS q5
        RETURN (q2.COL1 AS W, q2.COL2 AS X, q5.COL1 AS Y, q5.COL2 AS Z) }'
    task_count: 2237
    task_total_time_ms: 108
    transform_count: 563
    transform_time_ms: 30
    transform_yield_count: 160
    insert_time_ms: 7
    insert_new_count: 267
    insert_reused_count: 14
-   query: EXPLAIN select A.col1 AS W, A.col2 AS X, B.col1 AS Y, B.col2 AS Z from
        f1(a => 103, b => 'b') A, f1(a => 103, b => 'b') B where A.col1 = B.col1
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c30 AS LONG)
        AS A, promote(@c34 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) } | FLATMAP q2 -> { TF range(0l, promote(1l AS LONG), STEP 1l) | MAP
        (promote(@c30 AS LONG) AS A, promote(@c34 AS STRING) AS B) | FLATMAP q3 ->
        { COVERING(T1_IDX1 [EQUALS q3.B, [LESS_THAN q3.A]] -> [COL1: KEY[1], COL2:
        KEY[0], COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q4 RETURN
        (q4.COL1 AS COL1, q4.COL2 AS COL2) } | FILTER q2.COL1 EQUALS _.COL1 AS q5
        RETURN (q2.COL1 AS W, q2.COL2 AS X, q5.COL1 AS Y, q5.COL2 AS Z) }'
    task_count: 2237
    task_total_time_ms: 138
    transform_count: 563
    transform_time_ms: 42
    transform_yield_count: 160
    insert_time_ms: 8
    insert_new_count: 267
    insert_reused_count: 14
-   query: EXPLAIN with x(y, z) as (select * from f1(b => 'b', a => 103)) select *
        from x
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c21 AS LONG)
        AS A, promote(@c17 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) } | MAP (_.COL1 AS Y, _.COL2 AS Z)'
    task_count: 1152
    task_total_time_ms: 79
    transform_count: 272
    transform_time_ms: 22
    transform_yield_count: 81
    insert_time_ms: 4
    insert_new_count: 130
    insert_reused_count: 6
-   query: EXPLAIN with x(y, z) as (select * from f1(103, 'b')) select * from x
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c15 AS LONG)
        AS A, promote(@c17 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) } | MAP (_.COL1 AS Y, _.COL2 AS Z)'
    task_count: 1152
    task_total_time_ms: 82
    transform_count: 272
    transform_time_ms: 21
    transform_yield_count: 81
    insert_time_ms: 4
    insert_new_count: 130
    insert_reused_count: 6
-   query: EXPLAIN select * from t2 where exists (select * from f2(t2.z))
    explain: ISCAN(T2_IDX1 <,>) | FLATMAP q0 -> { TF range(0l, promote(1l AS LONG),
        STEP 1l) | MAP (q0.Z AS K) | FLATMAP q1 -> { ISCAN(T1_IDX1 <,>) | FILTER promote(_.COL3
        AS LONG) EQUALS q1.K AS q2 RETURN (q2.COL1 AS COL1, q2.COL2 AS COL2, q2.COL3
        AS COL3) } | DEFAULT NULL | FILTER _ NOT_NULL AS q3 RETURN q0 }
    task_count: 1054
    task_total_time_ms: 72
    transform_count: 276
    transform_time_ms: 25
    transform_yield_count: 107
    insert_time_ms: 2
    insert_new_count: 126
    insert_reused_count: 6
-   query: EXPLAIN select * from t2 where exists (select * from f2(k => t2.z))
    explain: ISCAN(T2_IDX1 <,>) | FLATMAP q0 -> { TF range(0l, promote(1l AS LONG),
        STEP 1l) | MAP (q0.Z AS K) | FLATMAP q1 -> { ISCAN(T1_IDX1 <,>) | FILTER promote(_.COL3
        AS LONG) EQUALS q1.K AS q2 RETURN (q2.COL1 AS COL1, q2.COL2 AS COL2, q2.COL3
        AS COL3) } | DEFAULT NULL | FILTER _ NOT_NULL AS q3 RETURN q0 }
    task_count: 1054
    task_total_time_ms: 72
    transform_count: 276
    transform_time_ms: 25
    transform_yield_count: 107
    insert_time_ms: 2
    insert_new_count: 126
    insert_reused_count: 6
-   query: EXPLAIN select * from f3(103, 'b', 4)
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c6 AS LONG)
        AS A, promote(@c8 AS STRING) AS B, promote(@c10 AS LONG) AS C) | FLATMAP q0
        -> { TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (q0.A AS A, q0.B AS
        B) | FLATMAP q1 -> { COVERING(T1_IDX1 [EQUALS q1.B, [LESS_THAN q1.A]] -> [COL1:
        KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2)
        AS q2 RETURN (q2.COL1 AS COL1, q2.COL2 AS COL2) } | FLATMAP q3 -> { TF range(0l,
        promote(1l AS LONG), STEP 1l) | MAP (q0.C AS K) | FLATMAP q4 -> { ISCAN(T1_IDX1
        <,>) | FILTER promote(_.COL3 AS LONG) EQUALS q4.K AS q5 RETURN (q5.COL1 AS
        COL1, q5.COL2 AS COL2, q5.COL3 AS COL3) } AS q6 RETURN (q3.COL1 AS COL1, q3.COL2
        AS COL2, q6.COL3 AS COL3) } AS q7 RETURN (q7.COL1 AS COL1, q7.COL2 AS COL2,
        q7.COL3 AS COL3) }'
    task_count: 1898
    task_total_time_ms: 126
    transform_count: 475
    transform_time_ms: 37
    transform_yield_count: 151
    insert_time_ms: 5
    insert_new_count: 228
    insert_reused_count: 10
-   query: EXPLAIN select * from f3(103, 'b', 4)
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c6 AS LONG)
        AS A, promote(@c8 AS STRING) AS B, promote(@c10 AS LONG) AS C) | FLATMAP q0
        -> { TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (q0.A AS A, q0.B AS
        B) | FLATMAP q1 -> { COVERING(T1_IDX1 [EQUALS q1.B, [LESS_THAN q1.A]] -> [COL1:
        KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2)
        AS q2 RETURN (q2.COL1 AS COL1, q2.COL2 AS COL2) } | FLATMAP q3 -> { TF range(0l,
        promote(1l AS LONG), STEP 1l) | MAP (q0.C AS K) | FLATMAP q4 -> { ISCAN(T1_IDX1
        <,>) | FILTER promote(_.COL3 AS LONG) EQUALS q4.K AS q5 RETURN (q5.COL1 AS
        COL1, q5.COL2 AS COL2, q5.COL3 AS COL3) } AS q6 RETURN (q3.COL1 AS COL1, q3.COL2
        AS COL2, q6.COL3 AS COL3) } AS q7 RETURN (q7.COL1 AS COL1, q7.COL2 AS COL2,
        q7.COL3 AS COL3) }'
    task_count: 1898
    task_total_time_ms: 126
    transform_count: 475
    transform_time_ms: 37
    transform_yield_count: 151
    insert_time_ms: 5
    insert_new_count: 228
    insert_reused_count: 10
-   query: EXPLAIN select * from f4(103, 'b', 2, 2)
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c6 AS LONG)
        AS A, promote(@c8 AS STRING) AS B, promote(@c10 AS LONG) AS C, promote(@c10
        AS LONG) AS D) | FLATMAP q0 -> { TF range(0l, promote(1l AS LONG), STEP 1l)
        | MAP (q0.A AS A, q0.B AS B, q0.C + q0.D AS C) | FLATMAP q1 -> { TF range(0l,
        promote(1l AS LONG), STEP 1l) | MAP (q1.A AS A, q1.B AS B) | FLATMAP q2 ->
        { COVERING(T1_IDX1 [EQUALS q2.B, [LESS_THAN q2.A]] -> [COL1: KEY[1], COL2:
        KEY[0], COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q3 RETURN
        (q3.COL1 AS COL1, q3.COL2 AS COL2) } | FLATMAP q4 -> { TF range(0l, promote(1l
        AS LONG), STEP 1l) | MAP (q1.C AS K) | FLATMAP q5 -> { ISCAN(T1_IDX1 <,>)
        | FILTER promote(_.COL3 AS LONG) EQUALS q5.K AS q6 RETURN (q6.COL1 AS COL1,
        q6.COL2 AS COL2, q6.COL3 AS COL3) } AS q7 RETURN (q4.COL1 AS COL1, q4.COL2
        AS COL2, q7.COL3 AS COL3) } AS q8 RETURN (q8.COL1 AS COL1, q8.COL2 AS COL2,
        q8.COL3 AS COL3) } AS q9 RETURN (q9.COL1 AS COL1, q9.COL2 AS COL2, q9.COL3
        AS COL3) }'
    task_count: 2077
    task_total_time_ms: 141
    transform_count: 525
    transform_time_ms: 40
    transform_yield_count: 159
    insert_time_ms: 6
    insert_new_count: 243
    insert_reused_count: 10
-   query: EXPLAIN select * from f4(a => 103, b => 'b', c => 2, d => 2)
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c8 AS LONG)
        AS A, promote(@c12 AS STRING) AS B, promote(@c16 AS LONG) AS C, promote(@c16
        AS LONG) AS D) | FLATMAP q0 -> { TF range(0l, promote(1l AS LONG), STEP 1l)
        | MAP (q0.A AS A, q0.B AS B, q0.C + q0.D AS C) | FLATMAP q1 -> { TF range(0l,
        promote(1l AS LONG), STEP 1l) | MAP (q1.A AS A, q1.B AS B) | FLATMAP q2 ->
        { COVERING(T1_IDX1 [EQUALS q2.B, [LESS_THAN q2.A]] -> [COL1: KEY[1], COL2:
        KEY[0], COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q3 RETURN
        (q3.COL1 AS COL1, q3.COL2 AS COL2) } | FLATMAP q4 -> { TF range(0l, promote(1l
        AS LONG), STEP 1l) | MAP (q1.C AS K) | FLATMAP q5 -> { ISCAN(T1_IDX1 <,>)
        | FILTER promote(_.COL3 AS LONG) EQUALS q5.K AS q6 RETURN (q6.COL1 AS COL1,
        q6.COL2 AS COL2, q6.COL3 AS COL3) } AS q7 RETURN (q4.COL1 AS COL1, q4.COL2
        AS COL2, q7.COL3 AS COL3) } AS q8 RETURN (q8.COL1 AS COL1, q8.COL2 AS COL2,
        q8.COL3 AS COL3) } AS q9 RETURN (q9.COL1 AS COL1, q9.COL2 AS COL2, q9.COL3
        AS COL3) }'
    task_count: 2077
    task_total_time_ms: 122
    transform_count: 525
    transform_time_ms: 38
    transform_yield_count: 159
    insert_time_ms: 5
    insert_new_count: 243
    insert_reused_count: 10
-   query: EXPLAIN select * from f5();
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(103 AS LONG)
        AS A, promote(''b'' AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) }'
    task_count: 1080
    task_total_time_ms: 79
    transform_count: 258
    transform_time_ms: 20
    transform_yield_count: 79
    insert_time_ms: 4
    insert_new_count: 126
    insert_reused_count: 6
-   query: EXPLAIN select * from f5(103);
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c6 AS LONG)
        AS A, promote(''b'' AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) }'
    task_count: 1080
    task_total_time_ms: 75
    transform_count: 258
    transform_time_ms: 21
    transform_yield_count: 79
    insert_time_ms: 4
    insert_new_count: 126
    insert_reused_count: 6
-   query: EXPLAIN select * from f5(b => 'b');
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(103 AS LONG)
        AS A, promote(@c8 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) }'
    task_count: 1080
    task_total_time_ms: 74
    transform_count: 258
    transform_time_ms: 21
    transform_yield_count: 79
    insert_time_ms: 4
    insert_new_count: 126
    insert_reused_count: 6
-   query: EXPLAIN select * from f5(b => 'b', a => 103);
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c12 AS LONG)
        AS A, promote(@c8 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) }'
    task_count: 1080
    task_total_time_ms: 78
    transform_count: 258
    transform_time_ms: 22
    transform_yield_count: 79
    insert_time_ms: 4
    insert_new_count: 126
    insert_reused_count: 6
-   query: EXPLAIN select * from f5(b => 'b', a => 102);
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c12 AS LONG)
        AS A, promote(@c8 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) }'
    task_count: 1080
    task_total_time_ms: 78
    transform_count: 258
    transform_time_ms: 22
    transform_yield_count: 79
    insert_time_ms: 4
    insert_new_count: 126
    insert_reused_count: 6
-   query: EXPLAIN select * from f5(b => 'a', a => 102);
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c12 AS LONG)
        AS A, promote(@c8 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) }'
    task_count: 1080
    task_total_time_ms: 78
    transform_count: 258
    transform_time_ms: 22
    transform_yield_count: 79
    insert_time_ms: 4
    insert_new_count: 126
    insert_reused_count: 6
-   query: EXPLAIN select * from f5(a => 102, b => 'a');
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c8 AS LONG)
        AS A, promote(@c12 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) }'
    task_count: 1080
    task_total_time_ms: 77
    transform_count: 258
    transform_time_ms: 21
    transform_yield_count: 79
    insert_time_ms: 4
    insert_new_count: 126
    insert_reused_count: 6
-   query: EXPLAIN select * from f5(102);
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c6 AS LONG)
        AS A, promote(''b'' AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) }'
    task_count: 1080
    task_total_time_ms: 75
    transform_count: 258
    transform_time_ms: 21
    transform_yield_count: 79
    insert_time_ms: 4
    insert_new_count: 126
    insert_reused_count: 6
-   query: EXPLAIN select * from f5(102, 'a');
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c6 AS LONG)
        AS A, promote(@c8 AS STRING) AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS
        q0.B, [LESS_THAN q0.A]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP
        (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1 AS COL1, q1.COL2 AS
        COL2) }'
    task_count: 1080
    task_total_time_ms: 73
    transform_count: 258
    transform_time_ms: 19
    transform_yield_count: 79
    insert_time_ms: 3
    insert_new_count: 126
    insert_reused_count: 6
