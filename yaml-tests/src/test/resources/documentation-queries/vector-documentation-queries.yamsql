#
# vector-documentation-queries.yamsql
#
# This source file is part of the FoundationDB open source project
#
# Copyright 2021-2024 Apple Inc. and the FoundationDB project authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
options:
  supported_version: !current_version
---
schema_template:
    create type as struct model_embedding(model_name string, embedding vector(3, float))
    create table embeddings(id bigint, embedding vector(3, float), primary key(id))
    create table documents(id bigint, content string, embedding model_embedding, primary key(id))
---
test_block:
  name: vector-documentation-tests
  preset: single_repetition_ordered
  options:
    statement_type: prepared
  tests:
    # Vector Type Declaration - Insert a FLOAT precision vector (documentation example)
    # Note: Using YAML DSL syntax for inserts as CAST expressions don't work with prepared statements
    -
      - query: INSERT INTO embeddings VALUES (1, !! !v32 [0.5, 1.2, -0.8] !!)
      - count: 1

    # Insert another row for testing
    -
      - query: INSERT INTO embeddings VALUES (2, !! !v32 [1.0, 2.0, 3.0] !!)
      - count: 1

    # Casting Arrays to Vectors - Cast FLOAT array to FLOAT vector (documentation example)
    -
      - query: SELECT CAST([1.2, 3.4, 5.6] AS VECTOR(3, FLOAT)) AS vec FROM embeddings WHERE id = 1
      - result: [{vec: !v32 [1.2, 3.4, 5.6]}]

    # Casting Arrays to Vectors - Cast INTEGER array to HALF vector (documentation example)
    -
      - query: SELECT CAST([1, 2, 3] AS VECTOR(3, HALF)) AS vec FROM embeddings WHERE id = 1
      - result: [{vec: !v16 [1.0, 2.0, 3.0]}]

    # Casting Arrays to Vectors - Cast mixed numeric types to DOUBLE vector (documentation example)
    -
      - query: SELECT CAST([1, 2.5, 3L] AS VECTOR(3, DOUBLE)) AS vec FROM embeddings WHERE id = 1
      - result: [{vec: !v64 [1.0, 2.5, 3.0]}]

    # Querying Vectors - Select vectors (documentation example)
    -
      - query: SELECT embedding FROM embeddings WHERE id = 1
      - result: [{embedding: !v32 [0.5, 1.2, -0.8]}]

    # Vector construction examples from documentation - CAST in SELECT contexts
    -
      - query: SELECT CAST([0.5, 1.2, -0.8] AS VECTOR(3, HALF)) AS half_vector FROM embeddings WHERE id = 1
      - result: [{half_vector: !v16 [0.5, 1.2, -0.8]}]

    -
      - query: SELECT CAST([0.5, 1.2, -0.8] AS VECTOR(3, FLOAT)) AS float_vector FROM embeddings WHERE id = 1
      - result: [{float_vector: !v32 [0.5, 1.2, -0.8]}]

    -
      - query: SELECT CAST([0.5, 1.2, -0.8] AS VECTOR(3, DOUBLE)) AS double_vector FROM embeddings WHERE id = 1
      - result: [{double_vector: !v64 [0.5, 1.2, -0.8]}]

    # Querying Vectors - Compare vectors for equality (documentation example)
    -
      - query: SELECT id FROM embeddings WHERE embedding = CAST([0.5, 1.2, -0.8] AS VECTOR(3, FLOAT))
      - result: [{1}]

    # Querying Vectors - Compare vectors for inequality (documentation example)
    -
      - query: SELECT id FROM embeddings WHERE embedding != CAST([1.0, 2.0, 3.0] AS VECTOR(3, FLOAT))
      - result: [{1}]

    # Querying Vectors - Check for NULL vectors (documentation example)
    -
      - query: INSERT INTO embeddings VALUES (3, NULL)
      - count: 1

    -
      - query: SELECT id FROM embeddings WHERE embedding IS NULL
      - result: [{3}]

    -
      - query: SELECT id FROM embeddings WHERE embedding IS NOT NULL
      - unorderedResult: [{1}, {2}]

    # Querying Vectors - IS DISTINCT FROM for NULL-safe comparisons (documentation example)
    -
      - query: SELECT embedding IS DISTINCT FROM CAST([0.5, 1.2, -0.8] AS VECTOR(3, FLOAT)) AS is_distinct FROM embeddings WHERE id = 1
      - result: [{is_distinct: false}]

    # Test CAST errors - Array must match vector dimension (documentation example)
    -
      - query: SELECT CAST([1.0, 2.0, 3.0, 4.0] AS VECTOR(3, FLOAT)) FROM embeddings WHERE id = 1
      - error: "22F3H"

    -
      - query: SELECT CAST([1.0, 2.0] AS VECTOR(3, DOUBLE)) FROM embeddings WHERE id = 1
      - error: "22F3H"

    # Test CAST errors - Only numeric arrays can be cast to vectors (documentation example)
    -
      - query: SELECT CAST(['a', 'b', 'c'] AS VECTOR(3, FLOAT)) FROM embeddings WHERE id = 1
      - error: "22F3H"

    -
      - query: SELECT CAST([true, false, true] AS VECTOR(3, HALF)) FROM embeddings WHERE id = 1
      - error: "22F3H"

    # Vectors in Struct Fields - Insert vector within struct (documentation example)
    # Note: Using YAML DSL syntax for inserts as CAST expressions don't work with prepared statements
    # https://github.com/FoundationDB/fdb-record-layer/issues/3703
    -
      - query: INSERT INTO documents VALUES (1, 'Sample document', ('gpt-4', !! !v32 [0.5, 1.2, -0.8] !!))
      - count: 1

    # Vectors in Struct Fields - Access vector within a struct (documentation example)
    -
      - query: SELECT embedding.embedding FROM documents WHERE id = 1
      - result: [{embedding: !v32 [0.5, 1.2, -0.8]}]

    # Vectors in Struct Fields - Access model name from struct (documentation example)
    -
      - query: SELECT embedding.model_name FROM documents WHERE id = 1
      - result: [{model_name: 'gpt-4'}]

    # Vectors in Struct Fields - Filter by vector within struct (documentation example)
    -
      - query: SELECT id FROM documents WHERE embedding.embedding = CAST([0.5, 1.2, -0.8] AS VECTOR(3, FLOAT))
      - result: [{1}]

    # Vectors in Struct Fields - Check NULL for vector field in struct (documentation example)
    -
      - query: INSERT INTO documents VALUES (2, 'Document without embedding', ('gpt-4', NULL))
      - count: 1

    -
      - query: SELECT id FROM documents WHERE embedding.embedding IS NULL
      - result: [{2}]

    # Test CAST from different numeric types to different vector precisions (documentation example)
    -
      - query: SELECT CAST([1.0, 2.0, 3.0] AS VECTOR(3, HALF)) AS vec FROM embeddings WHERE id = 1
      - result: [{vec: !v16 [1.0, 2.0, 3.0]}]

    -
      - query: SELECT CAST([1L, 2L, 3L] AS VECTOR(3, FLOAT)) AS vec FROM embeddings WHERE id = 1
      - result: [{vec: !v32 [1.0, 2.0, 3.0]}]

    -
      - query: SELECT CAST([1, 2, 3] AS VECTOR(3, DOUBLE)) AS vec FROM embeddings WHERE id = 1
      - result: [{vec: !v64 [1.0, 2.0, 3.0]}]

    # Test negative numbers (documentation example)
    -
      - query: SELECT CAST([-1.5, -2.5, -3.5] AS VECTOR(3, FLOAT)) AS vec FROM embeddings WHERE id = 1
      - result: [{vec: !v32 [-1.5, -2.5, -3.5]}]

