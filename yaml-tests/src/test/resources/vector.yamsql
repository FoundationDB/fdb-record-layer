#
# vector.yamsql
#
# This source file is part of the FoundationDB open source project
#
# Copyright 2021-2024 Apple Inc. and the FoundationDB project authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
options:
  supported_version: !current_version
---
schema_template:
    create type as struct embeddingStruct(model string, vdata vector(3, half))
    create type as struct groupedEmbeddingStruct(model string, vdatas vector(3, float) array)
    create table tHalfVector(a bigint, b vector(3, half), primary key(a))
    create table tFloatVector(a bigint, b vector(3, float), primary key(a))
    create table tDoubleVector(a bigint, b vector(3, double), primary key(a))
    create table tWithStruct(a bigint, embedding embeddingStruct, primary key(a))
    create table tWithGroupedStruct(a bigint, embeddingGrouped groupedEmbeddingStruct, primary key(a))
---
test_block:
  preset: single_repetition_ordered
  options:
    statement_type: prepared
  name: vector-tests
  tests:
#    -
#      # inserting vector literal is not yet supported.
#      - query: insert into tv values (100, [1.3, 1.4, 1.6])
#      - error: "XX000"
    -
      - query: insert into tHalfVector values (100, !! !v16 [1.3, 1.4, 1.6] !!)
      - count: 1
    -
      - query: select * from tHalfVector
      - result: [{100, !v16 [1.3, 1.4, 1.6]}]
    -
      - query: insert into tFloatVector values (100, !! !v32 [15.3, 1.4, 1.6] !!)
      - count: 1
    -
      - query: select * from tFloatVector
      - result: [{100, !v32 [15.3, 1.4, 1.6]}]
    -
      - query: insert into tDoubleVector values (100, !! !v64 [1.3, 1.4, 1.6] !!)
      - count: 1
    -
      - query: select * from tDoubleVector
      - result: [{100, !v64 [1.3, 1.4, 1.6]}]
    -
      - query: select cast([1.2f, 4.3f, 5.9f] as VECTOR(3, FLOAT)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c24 AS LONG) | MAP (CAST(array(@c5, @c7, @c9) AS VECTOR(32, 3)) AS _0)"
      - result: [{!v32 [1.2, 4.3, 5.9]}]
    # FLOAT array to HALF vector
    -
      - query: select cast([1.2f, 4.3f, 5.9f] as VECTOR(3, HALF)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c24 AS LONG) | MAP (CAST(array(@c5, @c7, @c9) AS VECTOR(16, 3)) AS _0)"
      - result: [{!v16 [1.2, 4.3, 5.9]}]
    # DOUBLE array to HALF vector
    -
      - query: select cast([1.2, 4.3, 5.9] as VECTOR(3, HALF)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c24 AS LONG) | MAP (CAST(array(@c5, @c7, @c9) AS VECTOR(16, 3)) AS _0)"
      - result: [{!v16 [1.2, 4.3, 5.9]}]
    # INT array to HALF vector
    -
      - query: select cast([1, 4, 5] as VECTOR(3, HALF)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c24 AS LONG) | MAP (CAST(array(@c5, @c7, @c9) AS VECTOR(16, 3)) AS _0)"
      - result: [{!v16 [1.0, 4.0, 5.0]}]
    # LONG array to HALF vector
    -
      - query: select cast([1L, 4L, 5L] as VECTOR(3, HALF)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c24 AS LONG) | MAP (CAST(array(@c5, @c7, @c9) AS VECTOR(16, 3)) AS _0)"
      - result: [{!v16 [1.0, 4.0, 5.0]}]
    # DOUBLE array to FLOAT vector
    -
      - query: select cast([1.2, 4.3, 5.9] as VECTOR(3, FLOAT)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c24 AS LONG) | MAP (CAST(array(@c5, @c7, @c9) AS VECTOR(32, 3)) AS _0)"
      - result: [{!v32 [1.2, 4.3, 5.9]}]
    # INT array to FLOAT vector
    -
      - query: select cast([1, 4, 5] as VECTOR(3, FLOAT)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c24 AS LONG) | MAP (CAST(array(@c5, @c7, @c9) AS VECTOR(32, 3)) AS _0)"
      - result: [{!v32 [1.0, 4.0, 5.0]}]
    # LONG array to FLOAT vector
    -
      - query: select cast([1L, 4L, 5L] as VECTOR(3, FLOAT)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c24 AS LONG) | MAP (CAST(array(@c5, @c7, @c9) AS VECTOR(32, 3)) AS _0)"
      - result: [{!v32 [1.0, 4.0, 5.0]}]
    # DOUBLE array to DOUBLE vector
    -
      - query: select cast([1.2, 4.3, 5.9] as VECTOR(3, DOUBLE)) from tDoubleVector where a = 100
      - result: [{!v64 [1.2, 4.3, 5.9]}]
    # INT array to DOUBLE vector
    -
      - query: select cast([1, 4, 5] as VECTOR(3, DOUBLE)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c24 AS LONG) | MAP (CAST(array(@c5, @c7, @c9) AS VECTOR(64, 3)) AS _0)"
      - result: [{!v64 [1.0, 4.0, 5.0]}]
    # LONG array to DOUBLE vector
    -
      - query: select cast([1L, 4L, 5L] as VECTOR(3, DOUBLE)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c24 AS LONG) | MAP (CAST(array(@c5, @c7, @c9) AS VECTOR(64, 3)) AS _0)"
      - result: [{!v64 [1.0, 4.0, 5.0]}]
    # Mix of integer and float conversions to HALF
    -
      - query: select cast([1, 2.5, 3L] as VECTOR(3, HALF)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c24 AS LONG) | MAP (CAST(array(@c5, @c7, @c9) AS VECTOR(16, 3)) AS _0)"
      - result: [{!v16 [1.0, 2.5, 3.0]}]
    # Mix of integer and double conversions to FLOAT
    -
      - query: select cast([1, 2.5, 3L] as VECTOR(3, FLOAT)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c24 AS LONG) | MAP (CAST(array(@c5, @c7, @c9) AS VECTOR(32, 3)) AS _0)"
      - result: [{!v32 [1.0, 2.5, 3.0]}]
    # Large numbers in LONG array to HALF vector
    -
      - query: select cast([1000L, 2000L, 3000L] as VECTOR(3, HALF)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c24 AS LONG) | MAP (CAST(array(@c5, @c7, @c9) AS VECTOR(16, 3)) AS _0)"
      - result: [{!v16 [1000.0, 2000.0, 3000.0]}]
    # Large numbers in LONG array to FLOAT vector
    -
      - query: select cast([1000000L, 2000000L, 3000000L] as VECTOR(3, FLOAT)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c24 AS LONG) | MAP (CAST(array(@c5, @c7, @c9) AS VECTOR(32, 3)) AS _0)"
      - result: [{!v32 [1000000.0, 2000000.0, 3000000.0]}]
    # Negative numbers to vectors
    -
      - query: select cast([-1.5, -2.5, -3.5] as VECTOR(3, HALF)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c27 AS LONG) | MAP (CAST(array(@c5, @c8, @c11) AS VECTOR(16, 3)) AS _0)"
      - result: [{!v16 [-1.5, -2.5, -3.5]}]
    -
      - query: select cast([-1.5f, -2.5f, -3.5f] as VECTOR(3, FLOAT)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c27 AS LONG) | MAP (CAST(array(@c5, @c8, @c11) AS VECTOR(32, 3)) AS _0)"
      - result: [{!v32 [-1.5, -2.5, -3.5]}]
    -
      - query: select cast([-100, -200, -300] as VECTOR(3, DOUBLE)) from tDoubleVector where a = 100
      - explain: "SCAN(<,>) | TFILTER TDOUBLEVECTOR | FILTER _.A EQUALS promote(@c27 AS LONG) | MAP (CAST(array(@c5, @c8, @c11) AS VECTOR(64, 3)) AS _0)"
      - result: [{!v64 [-100.0, -200.0, -300.0]}]
    # IS NULL tests for vectors
    -
      - query: select b is null from tHalfVector where a = 100
      - result: [{false}]
    -
      - query: select b is null from tFloatVector where a = 100
      - result: [{false}]
    -
      - query: select b is null from tDoubleVector where a = 100
      - result: [{false}]
    # IS NOT NULL tests for vectors
    -
      - query: select b is not null from tHalfVector where a = 100
      - result: [{true}]
    -
      - query: select b is not null from tFloatVector where a = 100
      - result: [{true}]
    -
      - query: select b is not null from tDoubleVector where a = 100
      - result: [{true}]
    # Insert NULL vectors
    -
      - query: insert into tHalfVector values (200, null)
      - count: 1
    -
      - query: insert into tFloatVector values (200, null)
      - count: 1
    -
      - query: insert into tDoubleVector values (200, null)
      - count: 1
    # IS NULL tests for NULL vectors
    -
      - query: select b is null from tHalfVector where a = 200
      - result: [{true}]
    -
      - query: select b is null from tFloatVector where a = 200
      - result: [{true}]
    -
      - query: select b is null from tDoubleVector where a = 200
      - result: [{true}]
    # IS NOT NULL tests for NULL vectors
    -
      - query: select b is not null from tHalfVector where a = 200
      - result: [{false}]
    -
      - query: select b is not null from tFloatVector where a = 200
      - result: [{false}]
    -
      - query: select b is not null from tDoubleVector where a = 200
      - result: [{false}]
    # Filter using IS NULL
    -
      - query: select a from tHalfVector where b is null
      - result: [{200}]
    -
      - query: select a from tFloatVector where b is null
      - result: [{200}]
    -
      - query: select a from tDoubleVector where b is null
      - result: [{200}]
    # Filter using IS NOT NULL
    -
      - query: select a from tHalfVector where b is not null
      - result: [{100}]
    -
      - query: select a from tFloatVector where b is not null
      - result: [{100}]
    -
      - query: select a from tDoubleVector where b is not null
      - result: [{100}]
    # Vector equality tests (VEC = VEC)
    -
      - query: insert into tHalfVector values (300, !! !v16 [1.3, 1.4, 1.6] !!)
      - count: 1
    -
      - query: select a from tHalfVector where b = !! !v16 [1.3, 1.4, 1.6] !!
      - result: [{100}, {300}]
    -
      - query: select a from tHalfVector where b = !! !v16 [9.9, 9.9, 9.9] !!
      - result: []
    -
      - query: insert into tFloatVector values (300, !! !v32 [15.3, 1.4, 1.6] !!)
      - count: 1
    -
      - query: select a from tFloatVector where b = !! !v32 [15.3, 1.4, 1.6] !!
      - result: [{100}, {300}]
    -
      - query: select a from tFloatVector where b = !! !v32 [9.9, 9.9, 9.9] !!
      - result: []
    -
      - query: insert into tDoubleVector values (300, !! !v64 [1.3, 1.4, 1.6] !!)
      - count: 1
    -
      - query: select a from tDoubleVector where b = !! !v64 [1.3, 1.4, 1.6] !!
      - result: [{100}, {300}]
    -
      - query: select a from tDoubleVector where b = !! !v64 [9.9, 9.9, 9.9] !!
      - result: []
    # Vector inequality tests (VEC != VEC)
    -
      - query: select a from tHalfVector where b != !! !v16 [1.3, 1.4, 1.6] !!
      - result: []
    -
      - query: select a from tHalfVector where b != !! !v16 [9.9, 9.9, 9.9] !!
      - result: [{100}, {300}]
    -
      - query: select a from tFloatVector where b != !! !v32 [15.3, 1.4, 1.6] !!
      - result: []
    -
      - query: select a from tFloatVector where b != !! !v32 [9.9, 9.9, 9.9] !!
      - result: [{100}, {300}]
    -
      - query: select a from tDoubleVector where b != !! !v64 [1.3, 1.4, 1.6] !!
      - result: []
    -
      - query: select a from tDoubleVector where b != !! !v64 [9.9, 9.9, 9.9] !!
      - result: [{100}, {300}]
    # Vector IS DISTINCT FROM tests
    -
      - query: select b is distinct from !! !v16 [1.3, 1.4, 1.6] !! from tHalfVector where a = 100
      - result: [{false}]
    -
      - query: select b is distinct from !! !v16 [9.9, 9.9, 9.9] !! from tHalfVector where a = 100
      - result: [{true}]
    -
      - query: select b is distinct from null from tHalfVector where a = 200
      - result: [{false}]
    -
      - query: select b is distinct from !! !v16 [1.3, 1.4, 1.6] !! from tHalfVector where a = 200
      - result: [{true}]
    -
      - query: select b is distinct from !! !v32 [15.3, 1.4, 1.6] !! from tFloatVector where a = 100
      - result: [{false}]
    -
      - query: select b is distinct from !! !v32 [9.9, 9.9, 9.9] !! from tFloatVector where a = 100
      - result: [{true}]
    -
      - query: select b is distinct from null from tFloatVector where a = 200
      - result: [{false}]
    -
      - query: select b is distinct from !! !v32 [15.3, 1.4, 1.6] !! from tFloatVector where a = 200
      - result: [{true}]
    -
      - query: select b is distinct from !! !v64 [1.3, 1.4, 1.6] !! from tDoubleVector where a = 100
      - result: [{false}]
    -
      - query: select b is distinct from !! !v64 [9.9, 9.9, 9.9] !! from tDoubleVector where a = 100
      - result: [{true}]
    -
      - query: select b is distinct from null from tDoubleVector where a = 200
      - result: [{false}]
    -
      - query: select b is distinct from !! !v64 [1.3, 1.4, 1.6] !! from tDoubleVector where a = 200
      - result: [{true}]
    # Vector NOT DISTINCT FROM tests
    -
      - query: select b is not distinct from !! !v16 [1.3, 1.4, 1.6] !! from tHalfVector where a = 100
      - result: [{true}]
    -
      - query: select b is not distinct from !! !v16 [9.9, 9.9, 9.9] !! from tHalfVector where a = 100
      - result: [{false}]
    -
      - query: select b is not distinct from null from tHalfVector where a = 200
      - result: [{true}]
    -
      - query: select b is not distinct from !! !v16 [1.3, 1.4, 1.6] !! from tHalfVector where a = 200
      - result: [{false}]
    -
      - query: select b is not distinct from !! !v32 [15.3, 1.4, 1.6] !! from tFloatVector where a = 100
      - result: [{true}]
    -
      - query: select b is not distinct from !! !v32 [9.9, 9.9, 9.9] !! from tFloatVector where a = 100
      - result: [{false}]
    -
      - query: select b is not distinct from null from tFloatVector where a = 200
      - result: [{true}]
    -
      - query: select b is not distinct from !! !v32 [15.3, 1.4, 1.6] !! from tFloatVector where a = 200
      - result: [{false}]
    -
      - query: select b is not distinct from !! !v64 [1.3, 1.4, 1.6] !! from tDoubleVector where a = 100
      - result: [{true}]
    -
      - query: select b is not distinct from !! !v64 [9.9, 9.9, 9.9] !! from tDoubleVector where a = 100
      - result: [{false}]
    -
      - query: select b is not distinct from null from tDoubleVector where a = 200
      - result: [{true}]
    -
      - query: select b is not distinct from !! !v64 [1.3, 1.4, 1.6] !! from tDoubleVector where a = 200
      - result: [{false}]
    # STRING array to vector should fail
    -
      - query: select cast(['a', 'b', 'c'] as VECTOR(3, FLOAT)) from tDoubleVector where a = 100
      - error: "22F3H"
    # BOOLEAN array to vector should fail
    -
      - query: select cast([true, false, true] as VECTOR(3, HALF)) from tDoubleVector where a = 100
      - error: "22F3H"
    # Mismatched dimensions should fail (array has 4 elements, vector expects 3)
    -
      - query: select cast([1.0, 2.0, 3.0, 4.0] as VECTOR(3, FLOAT)) from tDoubleVector where a = 100
      - error: "22F3H"
    # Mismatched dimensions should fail (array has 2 elements, vector expects 3)
    -
      - query: select cast([1.0, 2.0] as VECTOR(3, DOUBLE)) from tDoubleVector where a = 100
      - error: "22F3H"
    # Tests for tWithStruct (struct with HALF vector field)
    # Insert struct with vector
    -
      - query: insert into tWithStruct values (100, ('model1', !! !v16 [1.1, 2.2, 3.3] !!))
      - count: 1
    -
      - query: select * from tWithStruct
      - result: [{100, {'model1', !v16 [1.1, 2.2, 3.3]}}]
    -
      - query: select embedding.vdata from tWithStruct where a = 100
      - result: [{!v16 [1.1, 2.2, 3.3]}]
    -
      - query: select embedding.model from tWithStruct where a = 100
      - result: [{'model1'}]
    # Insert NULL struct
    -
      - query: insert into tWithStruct values (200, null)
      - count: 1
    -
      - query: select embedding.vdata is null from tWithStruct where a = 200
      - result: [{true}]
    -
      - query: select embedding.vdata is not null from tWithStruct where a = 200
      - result: [{false}]
    # Insert struct with NULL vector field
    -
      - query: insert into tWithStruct values (300, ('model2', null))
      - count: 1
    -
      - query: select embedding.vdata is null from tWithStruct where a = 300
      - result: [{true}]
    -
      - query: select embedding.model from tWithStruct where a = 300
      - result: [{'model2'}]
    # Filter using struct field with vector
    -
      - query: select a from tWithStruct where embedding.vdata = !! !v16 [1.1, 2.2, 3.3] !!
      - result: [{100}]
    -
      - query: select a from tWithStruct where embedding.vdata != !! !v16 [1.1, 2.2, 3.3] !!
      - result: []
    #-
      # https://github.com/FoundationDB/fdb-record-layer/issues/3700
      #- query: select a from tWithStruct where embedding is null
      #- result: [{200}]
    -
      - query: select a from tWithStruct where embedding.vdata is not null
      - result: [{100}]
    # IS DISTINCT FROM with struct vector field
    -
      - query: select embedding.vdata is distinct from !! !v16 [1.1, 2.2, 3.3] !! from tWithStruct where a = 100
      - result: [{false}]
    -
      - query: select embedding.vdata is distinct from !! !v16 [9.9, 9.9, 9.9] !! from tWithStruct where a = 100
      - result: [{true}]
    -
      - query: select embedding.vdata is distinct from null from tWithStruct where a = 300
      - result: [{false}]
    # IS NOT DISTINCT FROM with struct vector field
    -
      - query: select embedding.vdata is not distinct from !! !v16 [1.1, 2.2, 3.3] !! from tWithStruct where a = 100
      - result: [{true}]
    -
      - query: select embedding.vdata is not distinct from !! !v16 [9.9, 9.9, 9.9] !! from tWithStruct where a = 100
      - result: [{false}]
    -
      - query: select embedding.vdata is not distinct from null from tWithStruct where a = 300
      - result: [{true}]
    # Tests for tWithGroupedStruct (struct with FLOAT vector array field)
    # Insert struct with vector array
    -
      - query: insert into tWithGroupedStruct values (100, ('model1', [ !! !v32 [1.1, 2.2, 3.3] !! , !! !v32 [4.4, 5.5, 6.6] !! ] ) )
      - count: 1
    -
      - query: select * from tWithGroupedStruct
      - result: [{100, {'model1', [!v32 [1.1, 2.2, 3.3], !v32 [4.4, 5.5, 6.6]]}}]
    -
      - query: select embeddingGrouped.vdatas from tWithGroupedStruct where a = 100
      - result: [{[!v32 [1.1, 2.2, 3.3], !v32 [4.4, 5.5, 6.6]]}]
    -
      - query: select embeddingGrouped.model from tWithGroupedStruct where a = 100
      - result: [{'model1'}]
    # Insert NULL struct
    -
      - query: insert into tWithGroupedStruct values (200, null)
      - count: 1
    #-
      # https://github.com/FoundationDB/fdb-record-layer/issues/3700
      #- query: select embeddingGrouped is null from tWithGroupedStruct where a = 200
      #- result: [{true}]
    # Insert struct with single vector in array
    -
      - query: insert into tWithGroupedStruct values (300, ('model4', [ !! !v32 [7.7, 8.8, 9.9] !! ]))
      - count: 1
    -
      - query: select embeddingGrouped.vdatas from tWithGroupedStruct where a = 300
      - result: [{[!v32 [7.7, 8.8, 9.9]]}]
