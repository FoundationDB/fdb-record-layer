basic-sql-function-tests:
-   query: EXPLAIN select col1, col2 from f1(a => 103, b => 'b');
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c10 AS LONG)
        AS A, @c14 AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS promote(q0.B AS
        STRING), [LESS_THAN promote(q0.A AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0],
        COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1
        AS COL1, q1.COL2 AS COL2) } | MAP (_.COL1 AS COL1, _.COL2 AS COL2)'
    task_count: 1083
    task_total_time_ms: 257
    transform_count: 302
    transform_time_ms: 155
    transform_yield_count: 78
    insert_time_ms: 16
    insert_new_count: 267
    insert_reused_count: 5
-   query: EXPLAIN select col1, col2 from f1(b => 'b', a => 103);
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c14 AS LONG)
        AS A, @c10 AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS promote(q0.B AS
        STRING), [LESS_THAN promote(q0.A AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0],
        COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1
        AS COL1, q1.COL2 AS COL2) } | MAP (_.COL1 AS COL1, _.COL2 AS COL2)'
    task_count: 1083
    task_total_time_ms: 34
    transform_count: 302
    transform_time_ms: 11
    transform_yield_count: 78
    insert_time_ms: 3
    insert_new_count: 267
    insert_reused_count: 5
-   query: EXPLAIN select col1, col2 from f1(103, 'b');
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c8 AS LONG)
        AS A, @c10 AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS promote(q0.B AS
        STRING), [LESS_THAN promote(q0.A AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0],
        COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1
        AS COL1, q1.COL2 AS COL2) } | MAP (_.COL1 AS COL1, _.COL2 AS COL2)'
    task_count: 1083
    task_total_time_ms: 254
    transform_count: 302
    transform_time_ms: 151
    transform_yield_count: 78
    insert_time_ms: 20
    insert_new_count: 267
    insert_reused_count: 5
-   query: EXPLAIN select col1 + 10, col2 from f1(103, 'b');
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c10 AS LONG)
        AS A, @c12 AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS promote(q0.B AS
        STRING), [LESS_THAN promote(q0.A AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0],
        COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1
        AS COL1, q1.COL2 AS COL2) } | MAP (_.COL1 + @c4 AS _0, _.COL2 AS COL2)'
    task_count: 1083
    task_total_time_ms: 76
    transform_count: 302
    transform_time_ms: 34
    transform_yield_count: 78
    insert_time_ms: 9
    insert_new_count: 267
    insert_reused_count: 5
-   query: EXPLAIN select * from f1(103, 'b');
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c6 AS LONG)
        AS A, @c8 AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS promote(q0.B AS
        STRING), [LESS_THAN promote(q0.A AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0],
        COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1
        AS COL1, q1.COL2 AS COL2) }'
    task_count: 1085
    task_total_time_ms: 51
    transform_count: 302
    transform_time_ms: 18
    transform_yield_count: 78
    insert_time_ms: 8
    insert_new_count: 266
    insert_reused_count: 5
-   query: EXPLAIN select * from f1(103, 'b') where col1 = 101
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c6 AS LONG)
        AS A, @c8 AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS promote(q0.B AS
        STRING), [LESS_THAN promote(q0.A AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0],
        COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1
        AS COL1, q1.COL2 AS COL2) } | FILTER _.COL1 EQUALS promote(@c13 AS LONG)'
    task_count: 1083
    task_total_time_ms: 31
    transform_count: 302
    transform_time_ms: 12
    transform_yield_count: 78
    insert_time_ms: 4
    insert_new_count: 267
    insert_reused_count: 5
-   query: EXPLAIN select * from f1(103 + 1, 'b')
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c6 + @c8
        AS LONG) AS A, @c10 AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS promote(q0.B
        AS STRING), [LESS_THAN promote(q0.A AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0],
        COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1
        AS COL1, q1.COL2 AS COL2) }'
    task_count: 1085
    task_total_time_ms: 258
    transform_count: 302
    transform_time_ms: 171
    transform_yield_count: 78
    insert_time_ms: 16
    insert_new_count: 266
    insert_reused_count: 5
-   query: EXPLAIN select * from (select * from f1(103 + 1, 'b')) as x where col1
        < 105
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c10 + @c12
        AS LONG) AS A, @c14 AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS promote(q0.B
        AS STRING), [LESS_THAN promote(q0.A AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0],
        COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1
        AS COL1, q1.COL2 AS COL2) } | FILTER _.COL1 LESS_THAN promote(@c22 AS LONG)'
    task_count: 1116
    task_total_time_ms: 259
    transform_count: 314
    transform_time_ms: 154
    transform_yield_count: 79
    insert_time_ms: 16
    insert_new_count: 268
    insert_reused_count: 5
-   query: EXPLAIN select A.col1 AS W, A.col2 AS X, B.col1 AS Y, B.col2 AS Z from
        f1(103, 'b') A, f1(103, 'b') B where A.col1 = B.col1
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c28 AS LONG)
        AS A, @c30 AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS promote(q0.B AS
        STRING), [LESS_THAN promote(q0.A AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0],
        COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1
        AS COL1, q1.COL2 AS COL2) } | FLATMAP q2 -> { TF range(0l, promote(1l AS LONG),
        STEP 1l) | MAP (promote(@c28 AS LONG) AS A, @c30 AS B) | FLATMAP q0 -> { COVERING(T1_IDX1
        [EQUALS promote(q0.B AS STRING), [LESS_THAN promote(q0.A AS LONG)]] -> [COL1:
        KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2)
        AS q4 RETURN (q4.COL1 AS COL1, q4.COL2 AS COL2) } | FILTER q2.COL1 EQUALS
        _.COL1 AS q5 RETURN (q2.COL1 AS W, q2.COL2 AS X, q5.COL1 AS Y, q5.COL2 AS
        Z) }'
    task_count: 1954
    task_total_time_ms: 96
    transform_count: 548
    transform_time_ms: 34
    transform_yield_count: 122
    insert_time_ms: 8
    insert_new_count: 526
    insert_reused_count: 10
-   query: EXPLAIN select A.col1 AS W, A.col2 AS X, B.col1 AS Y, B.col2 AS Z from
        f1(a => 103, b => 'b') A, f1(a => 103, b => 'b') B where A.col1 = B.col1
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c30 AS LONG)
        AS A, @c34 AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS promote(q0.B AS
        STRING), [LESS_THAN promote(q0.A AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0],
        COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1
        AS COL1, q1.COL2 AS COL2) } | FLATMAP q2 -> { TF range(0l, promote(1l AS LONG),
        STEP 1l) | MAP (promote(@c30 AS LONG) AS A, @c34 AS B) | FLATMAP q0 -> { COVERING(T1_IDX1
        [EQUALS promote(q0.B AS STRING), [LESS_THAN promote(q0.A AS LONG)]] -> [COL1:
        KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2)
        AS q4 RETURN (q4.COL1 AS COL1, q4.COL2 AS COL2) } | FILTER q2.COL1 EQUALS
        _.COL1 AS q5 RETURN (q2.COL1 AS W, q2.COL2 AS X, q5.COL1 AS Y, q5.COL2 AS
        Z) }'
    task_count: 1954
    task_total_time_ms: 303
    transform_count: 548
    transform_time_ms: 176
    transform_yield_count: 122
    insert_time_ms: 32
    insert_new_count: 526
    insert_reused_count: 10
-   query: EXPLAIN with x(y, z) as (select * from f1(b => 'b', a => 103)) select *
        from x
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c21 AS LONG)
        AS A, @c17 AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS promote(q0.B AS
        STRING), [LESS_THAN promote(q0.A AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0],
        COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1
        AS COL1, q1.COL2 AS COL2) } | MAP (_.COL1 AS Y, _.COL2 AS Z)'
    task_count: 1116
    task_total_time_ms: 49
    transform_count: 314
    transform_time_ms: 23
    transform_yield_count: 79
    insert_time_ms: 3
    insert_new_count: 268
    insert_reused_count: 5
-   query: EXPLAIN with x(y, z) as (select * from f1(103, 'b')) select * from x
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c15 AS LONG)
        AS A, @c17 AS B) | FLATMAP q0 -> { COVERING(T1_IDX1 [EQUALS promote(q0.B AS
        STRING), [LESS_THAN promote(q0.A AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0],
        COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2) AS q1 RETURN (q1.COL1
        AS COL1, q1.COL2 AS COL2) } | MAP (_.COL1 AS Y, _.COL2 AS Z)'
    task_count: 1116
    task_total_time_ms: 46
    transform_count: 314
    transform_time_ms: 19
    transform_yield_count: 79
    insert_time_ms: 4
    insert_new_count: 268
    insert_reused_count: 5
-   query: EXPLAIN select * from t2 where exists (select * from f2(t2.z))
    explain: ISCAN(T2_IDX1 <,>) | FLATMAP q0 -> { TF range(0l, promote(1l AS LONG),
        STEP 1l) | MAP (promote(q0.Z AS LONG) AS K) | FLATMAP q1 -> { ISCAN(T1_IDX1
        <,>) | FILTER promote(_.COL3 AS LONG) EQUALS promote(q1.K AS LONG) AS q2 RETURN
        (q2.COL1 AS COL1, q2.COL2 AS COL2, q2.COL3 AS COL3) } | DEFAULT NULL | FILTER
        _ NOT_NULL AS q3 RETURN q0 }
    task_count: 1269
    task_total_time_ms: 276
    transform_count: 404
    transform_time_ms: 183
    transform_yield_count: 112
    insert_time_ms: 14
    insert_new_count: 236
    insert_reused_count: 7
-   query: EXPLAIN select * from t2 where exists (select * from f2(k => t2.z))
    explain: ISCAN(T2_IDX1 <,>) | FLATMAP q0 -> { TF range(0l, promote(1l AS LONG),
        STEP 1l) | MAP (promote(q0.Z AS LONG) AS K) | FLATMAP q1 -> { ISCAN(T1_IDX1
        <,>) | FILTER promote(_.COL3 AS LONG) EQUALS promote(q1.K AS LONG) AS q2 RETURN
        (q2.COL1 AS COL1, q2.COL2 AS COL2, q2.COL3 AS COL3) } | DEFAULT NULL | FILTER
        _ NOT_NULL AS q3 RETURN q0 }
    task_count: 1269
    task_total_time_ms: 46
    transform_count: 404
    transform_time_ms: 25
    transform_yield_count: 112
    insert_time_ms: 2
    insert_new_count: 236
    insert_reused_count: 7
-   query: EXPLAIN select * from f3(103, 'b', 4)
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c6 AS LONG)
        AS A, @c8 AS B, promote(@c10 AS LONG) AS C) | FLATMAP q0 -> { TF range(0l,
        promote(1l AS LONG), STEP 1l) | MAP (q0.A AS A, q0.B AS B) | FLATMAP q1 ->
        { COVERING(T1_IDX1 [EQUALS promote(q1.B AS STRING), [LESS_THAN promote(q1.A
        AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP (_.COL1 AS
        COL1, _.COL2 AS COL2) AS q2 RETURN (q2.COL1 AS COL1, q2.COL2 AS COL2) } |
        FLATMAP q3 -> { TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (q0.C AS
        K) | FLATMAP q4 -> { ISCAN(T1_IDX1 <,>) | FILTER promote(_.COL3 AS LONG) EQUALS
        promote(q4.K AS LONG) AS q5 RETURN (q5.COL1 AS COL1, q5.COL2 AS COL2, q5.COL3
        AS COL3) } AS q6 RETURN (q3.COL1 AS COL1, q3.COL2 AS COL2, q6.COL3 AS COL3)
        } AS q7 RETURN (q7.COL1 AS COL1, q7.COL2 AS COL2, q7.COL3 AS COL3) }'
    task_count: 2025
    task_total_time_ms: 94
    transform_count: 609
    transform_time_ms: 34
    transform_yield_count: 151
    insert_time_ms: 6
    insert_new_count: 433
    insert_reused_count: 8
-   query: EXPLAIN select * from f3(103, 'b', 4)
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c6 AS LONG)
        AS A, @c8 AS B, promote(@c10 AS LONG) AS C) | FLATMAP q0 -> { TF range(0l,
        promote(1l AS LONG), STEP 1l) | MAP (q0.A AS A, q0.B AS B) | FLATMAP q1 ->
        { COVERING(T1_IDX1 [EQUALS promote(q1.B AS STRING), [LESS_THAN promote(q1.A
        AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP (_.COL1 AS
        COL1, _.COL2 AS COL2) AS q2 RETURN (q2.COL1 AS COL1, q2.COL2 AS COL2) } |
        FLATMAP q3 -> { TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (q0.C AS
        K) | FLATMAP q4 -> { ISCAN(T1_IDX1 <,>) | FILTER promote(_.COL3 AS LONG) EQUALS
        promote(q4.K AS LONG) AS q5 RETURN (q5.COL1 AS COL1, q5.COL2 AS COL2, q5.COL3
        AS COL3) } AS q6 RETURN (q3.COL1 AS COL1, q3.COL2 AS COL2, q6.COL3 AS COL3)
        } AS q7 RETURN (q7.COL1 AS COL1, q7.COL2 AS COL2, q7.COL3 AS COL3) }'
    task_count: 2025
    task_total_time_ms: 94
    transform_count: 609
    transform_time_ms: 34
    transform_yield_count: 151
    insert_time_ms: 6
    insert_new_count: 433
    insert_reused_count: 8
-   query: EXPLAIN select * from f4(103, 'b', 2, 2)
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c6 AS LONG)
        AS A, @c8 AS B, promote(@c10 AS LONG) AS C, promote(@c10 AS LONG) AS D) |
        FLATMAP q0 -> { TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (q0.A AS
        A, q0.B AS B, promote(q0.C + q0.D AS LONG) AS C) | FLATMAP q1 -> { TF range(0l,
        promote(1l AS LONG), STEP 1l) | MAP (q1.A AS A, q1.B AS B) | FLATMAP q2 ->
        { COVERING(T1_IDX1 [EQUALS promote(q2.B AS STRING), [LESS_THAN promote(q2.A
        AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP (_.COL1 AS
        COL1, _.COL2 AS COL2) AS q3 RETURN (q3.COL1 AS COL1, q3.COL2 AS COL2) } |
        FLATMAP q4 -> { TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (q1.C AS
        K) | FLATMAP q5 -> { ISCAN(T1_IDX1 <,>) | FILTER promote(_.COL3 AS LONG) EQUALS
        promote(q5.K AS LONG) AS q6 RETURN (q6.COL1 AS COL1, q6.COL2 AS COL2, q6.COL3
        AS COL3) } AS q7 RETURN (q4.COL1 AS COL1, q4.COL2 AS COL2, q7.COL3 AS COL3)
        } AS q8 RETURN (q8.COL1 AS COL1, q8.COL2 AS COL2, q8.COL3 AS COL3) } AS q9
        RETURN (q9.COL1 AS COL1, q9.COL2 AS COL2, q9.COL3 AS COL3) }'
    task_count: 2139
    task_total_time_ms: 130
    transform_count: 655
    transform_time_ms: 50
    transform_yield_count: 155
    insert_time_ms: 10
    insert_new_count: 440
    insert_reused_count: 8
-   query: EXPLAIN select * from f4(a => 103, b => 'b', c => 2, d => 2)
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c8 AS LONG)
        AS A, @c12 AS B, promote(@c16 AS LONG) AS C, promote(@c16 AS LONG) AS D) |
        FLATMAP q0 -> { TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (q0.A AS
        A, q0.B AS B, promote(q0.C + q0.D AS LONG) AS C) | FLATMAP q1 -> { TF range(0l,
        promote(1l AS LONG), STEP 1l) | MAP (q1.A AS A, q1.B AS B) | FLATMAP q2 ->
        { COVERING(T1_IDX1 [EQUALS promote(q2.B AS STRING), [LESS_THAN promote(q2.A
        AS LONG)]] -> [COL1: KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP (_.COL1 AS
        COL1, _.COL2 AS COL2) AS q3 RETURN (q3.COL1 AS COL1, q3.COL2 AS COL2) } |
        FLATMAP q4 -> { TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (q1.C AS
        K) | FLATMAP q5 -> { ISCAN(T1_IDX1 <,>) | FILTER promote(_.COL3 AS LONG) EQUALS
        promote(q5.K AS LONG) AS q6 RETURN (q6.COL1 AS COL1, q6.COL2 AS COL2, q6.COL3
        AS COL3) } AS q7 RETURN (q4.COL1 AS COL1, q4.COL2 AS COL2, q7.COL3 AS COL3)
        } AS q8 RETURN (q8.COL1 AS COL1, q8.COL2 AS COL2, q8.COL3 AS COL3) } AS q9
        RETURN (q9.COL1 AS COL1, q9.COL2 AS COL2, q9.COL3 AS COL3) }'
    task_count: 2139
    task_total_time_ms: 303
    transform_count: 655
    transform_time_ms: 194
    transform_yield_count: 155
    insert_time_ms: 16
    insert_new_count: 440
    insert_reused_count: 8
-   query: EXPLAIN select * from f4(c => 2, a => 103, b => 'b', d => 2)
    explain: 'TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (promote(@c12 AS LONG)
        AS A, @c16 AS B, promote(@c8 AS LONG) AS C, promote(@c8 AS LONG) AS D) | FLATMAP
        q0 -> { TF range(0l, promote(1l AS LONG), STEP 1l) | MAP (q0.A AS A, q0.B
        AS B, promote(q0.C + q0.D AS LONG) AS C) | FLATMAP q1 -> { TF range(0l, promote(1l
        AS LONG), STEP 1l) | MAP (q1.A AS A, q1.B AS B) | FLATMAP q2 -> { COVERING(T1_IDX1
        [EQUALS promote(q2.B AS STRING), [LESS_THAN promote(q2.A AS LONG)]] -> [COL1:
        KEY[1], COL2: KEY[0], COL3: KEY[2]]) | MAP (_.COL1 AS COL1, _.COL2 AS COL2)
        AS q3 RETURN (q3.COL1 AS COL1, q3.COL2 AS COL2) } | FLATMAP q4 -> { TF range(0l,
        promote(1l AS LONG), STEP 1l) | MAP (q1.C AS K) | FLATMAP q5 -> { ISCAN(T1_IDX1
        <,>) | FILTER promote(_.COL3 AS LONG) EQUALS promote(q5.K AS LONG) AS q6 RETURN
        (q6.COL1 AS COL1, q6.COL2 AS COL2, q6.COL3 AS COL3) } AS q7 RETURN (q4.COL1
        AS COL1, q4.COL2 AS COL2, q7.COL3 AS COL3) } AS q8 RETURN (q8.COL1 AS COL1,
        q8.COL2 AS COL2, q8.COL3 AS COL3) } AS q9 RETURN (q9.COL1 AS COL1, q9.COL2
        AS COL2, q9.COL3 AS COL3) }'
    task_count: 2139
    task_total_time_ms: 52
    transform_count: 655
    transform_time_ms: 20
    transform_yield_count: 155
    insert_time_ms: 4
    insert_new_count: 440
    insert_reused_count: 8
