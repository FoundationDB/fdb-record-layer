#
# field-index-tests-proto.yamsql
#
# This source file is part of the FoundationDB open source project
#
# Copyright 2021-2024 Apple Inc. and the FoundationDB project authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
setup:
  connect: "jdbc:embed:/__SYS?schema=CATALOG"
  steps:
    - query: drop schema template if exists field_index_tests_proto_template
    - query: drop database if exists /FRL/FIELD_INDEX_PROTO_YAML
    - query: create database /FRL/FIELD_INDEX_PROTO_YAML
    - load schema template: FIELD_INDEX_TESTS_PROTO_TEMPLATE from com.apple.foundationdb.relational.yamltests.generated.fieldindextests.FieldIndexTestsProto
    - query: create schema /FRL/FIELD_INDEX_PROTO_YAML/test with template FIELD_INDEX_TESTS_PROTO_TEMPLATE
    - set schema state: "{\"name\": \"TEST\", \"database_id\": \"/FRL/FIELD_INDEX_PROTO_YAML\", \"template_name\": \"FIELD_INDEX_TESTS_PROTO_TEMPLATE\", \"store_info\" : {\"formatVersion\": 2}}"
---
setup:
  connect: "jdbc:embed:/FRL/FIELD_INDEX_PROTO_YAML?schema=TEST"
  steps:
    - query: INSERT INTO "MyTable"
          VALUES (1,  10, null,  2,    1),
                 (2,  10, null,  4,    2),
                 (3,  10, 1,     null, 3),
                 (4,  10, 3,     null, 4),
                 (5,  10, 5,     null, 5),
                 (6,  20, 7,     null, 6),
                 (7,  20, 9,     null, 7),
                 (8,  20, null,  6,    8),
                 (9,  20, null,  8,    9),
                 (10, 20, null,  10,   10),
                 (11, 20, null,  12,   11),
                 (12, 20, null,  14,   12),
                 (13, 20, null,  16,   13)
---
test_block:
  connect: "jdbc:embed:/FRL/FIELD_INDEX_PROTO_YAML?schema=TEST"
  options:
    mode: parallelized
    repetition: 5
    check_cache: true
  tests:
    -
      - query: select * from (select * from (select * from "MyTable") as x where ID = 5) as y;
      - result: [{ID: !l 5, COL1: !l 10, COL31: !l 5, COL32: !null _, COL2: !l 5}]
    -
      - query: select * from (select * from (select * from "MyTable") as x) as y where ID = 5;
      - result: [{ID: !l 5, COL1: !l 10, COL31: !l 5, COL32: !null _, COL2: !l 5}]
    -
      - query: select count(*) from (select * from (select * from (select * from "MyTable"  where ID = 5) as x) as y) as z;
      - result: [{!l 1}]
    -
      - query: select COL31, COL32 from (select * from (select * from "MyTable") as x) as y where ID = 5;
      - result: [{COL31: !l 5, COL32: !null _}]
    -
      - query: select sum(COL1) from "MyTable";
      - result: [{!l 210}]
    -
      - query: select count(COL1) from "MyTable";
      - result: [{!l 13}]
    -
      - query: select * from (select * from (select * from (select * from "MyTable"  where ID > 10) as x) as y) as z;
      - result: [{ID: !l 11, COL1: !l 20, COL31: !null _, COL32: !l 12, COL2: !l 11},
                 {ID: !l 12, COL1: !l 20, COL31: !null _, COL32: !l 14, COL2: !l 12},
                 {ID: !l 13, COL1: !l 20, COL31: !null _, COL32: !l 16, COL2: !l 13}]
---
test_block:
  connect: "jdbc:embed:/FRL/FIELD_INDEX_PROTO_YAML?schema=TEST"
  options:
    mode: ordered
    repetition: 1
  tests:
    -
      # we are setting here all branches of the `oneof` which is incorrect.
      # protobuf is not complaining about this, and continues to preserve
      # the value of the last set branch.
      # TODO (Represent pb-oneof as a constraint in SQL)
      - query: INSERT INTO "MyTable"
               VALUES (14,  10, 20,  2,    1)
      - count: 1
    -
      - query: select * from (select * from (select * from "MyTable") as x where ID = 14) as y;
      - result: [{ID: !l 14, COL1: !l 10, COL31: !null _, COL32: !l 2, COL2: !l 1}]
    -
      # here, we are updating all branches of the `oneof` which is, again, incorrect.
      # protobuf is not complaining about this, and continues to preserve
      # the value of the last set branch.
      # TODO (Represent pb-oneof as a constraint in SQL)
      - query: update "MyTable"
               set COL31 = 42, COL32 = 45
               where ID = 14
    -
      - query: select * from (select * from (select * from "MyTable") as x where ID = 14) as y;
      - result: [{ID: !l 14, COL1: !l 10, COL31: !null _, COL32: !l 45, COL2: !l 1}]
---
destruct:
  connect: "jdbc:embed:/__SYS?schema=CATALOG"
  steps:
    - query: drop schema template field_index_tests_proto_template
    - query: drop database /FRL/FIELD_INDEX_PROTO_YAML
...
