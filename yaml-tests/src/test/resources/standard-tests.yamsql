#
# standard-tests.yamsql
#
# This source file is part of the FoundationDB open source project
#
# Copyright 2021-2024 Apple Inc. and the FoundationDB project authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
schema_template:
    create table t1(id bigint, col1 bigint, col2 bigint, primary key(id))
    create index i1 as select col1 from t1
---
setup:
  steps:
    - query: INSERT INTO T1
        VALUES (1, 10, 1),
               (2, 10, 2),
               (3, 10, 3),
               (4, 10, 4),
               (5, 10, 5),
               (6, 20, 6),
               (7, 20, 7),
               (8, 20, 8),
               (9, 20, 9),
               (10, 20, 10),
               (11, 20, 11),
               (12, 20, 12),
               (13, 20, 13)
---
test_block:
  name: standard-tests
  tests:
    -
      - query: select id, case when col1 = 10 then 100
                               when col2 in (6,7,8,9) then 200
                               else 300 end as NEWCOL
               from T1
      - explain: "ISCAN(I1 <,>) | MAP (_.ID AS ID, pick(ConditionSelector(_.COL1 equals @c8, _.COL2 IN promote(@c14 AS ARRAY(LONG)), TRUE), @c10, @c24, @c26) AS NEWCOL)"
      - result: [{ID: 1, NEWCOL: 100},
                 {ID: 2, NEWCOL: 100},
                 {ID: 3, NEWCOL: 100},
                 {ID: 4, NEWCOL: 100},
                 {ID: 5, NEWCOL: 100},
                 {ID: 6, NEWCOL: 200},
                 {ID: 7, NEWCOL: 200},
                 {ID: 8, NEWCOL: 200},
                 {ID: 9, NEWCOL: 200},
                 {ID: 10, NEWCOL: 300},
                 {ID: 11, NEWCOL: 300},
                 {ID: 12, NEWCOL: 300},
                 {ID: 13, NEWCOL: 300} ]
    -
      - query: select id, case when col1 = 10 then 100
          when col2 in (6,7,8,9) then 200 end as NEWCOL
          from T1
      - explain: "ISCAN(I1 <,>) | MAP (_.ID AS ID, pick(ConditionSelector(_.COL1 equals @c8, _.COL2 IN promote(@c14 AS ARRAY(LONG))), @c10, @c24) AS NEWCOL)"
      - result: [{ID: 1, NEWCOL: 100},
                 {ID: 2, NEWCOL: 100},
                 {ID: 3, NEWCOL: 100},
                 {ID: 4, NEWCOL: 100},
                 {ID: 5, NEWCOL: 100},
                 {ID: 6, NEWCOL: 200},
                 {ID: 7, NEWCOL: 200},
                 {ID: 8, NEWCOL: 200},
                 {ID: 9, NEWCOL: 200},
                 {ID: 10, NEWCOL: !null x},
                 {ID: 11, NEWCOL: !null x},
                 {ID: 12, NEWCOL: !null x},
                 {ID: 13, NEWCOL: !null x} ]
    -
      - query: select * from (select * from (select * from T1) as x where ID = 5) as y;
      - explain: "COVERING(I1 <,> -> [COL1: KEY[0], ID: KEY[2]]) | FILTER _.ID EQUALS promote(@c19 AS LONG) | FETCH"
      - result: [{ID: !l 5, !l 10, !l 5}]
    -
      - query: select * from (select * from (select * from T1) as x) as y where ID = 5;
      - explain: "COVERING(I1 <,> -> [COL1: KEY[0], ID: KEY[2]]) | FILTER _.ID EQUALS promote(@c22 AS LONG) | FETCH"
      - result: [{ID: !l 5, !l 10, !l 5}]
    -
      - query: select count(*) from (select * from (select * from (select * from T1  where ID = 5) as x) as y) as z;
      - supported_version: !current_version
      - explain: "COVERING(I1 <,> -> [COL1: KEY[0], ID: KEY[2]]) | FILTER _.ID EQUALS promote(@c23 AS LONG) | FETCH | MAP (_ AS _0) | AGG (count_star(*) AS _0) | ON EMPTY NULL | MAP (coalesce_long(_._0._0, promote(0l AS LONG)) AS _0)"
      - maxRows: 0
      - result: [{!l 1}]
    -
      # Copy of above query to simulate force continuations mode, which does not work prior to !current_version due to
      # https://github.com/FoundationDB/fdb-record-layer/issues/3096. Can remove once we no longer with testing mixed-mode
      # capabilities with versions older than !current_version
      - query: select count(*) from (select * from (select * from (select * from T1  where ID = 5) as x) as y) as z;
      - maxRows: 1
      - initialVersionLessThan: !current_version
      - result: [{!l 1}]
      - result: [{!l 0}]
      - result: [{!l 1}]
      - initialVersionAtLeast: !current_version
      - result: [{!l 1}]
      - result: []
    -
      - query: select * from (select * from (select * from (select * from T1  where ID > 10) as x) as y) as z;
      - explain: "COVERING(I1 <,> -> [COL1: KEY[0], ID: KEY[2]]) | FILTER _.ID GREATER_THAN promote(@c20 AS LONG) | FETCH"
      - result: [{ID: !l 11, !l 20, !l 11}, {ID: !l 12, !l 20, !l 12}, {ID: !l 13, !l 20, !l 13}]
...
