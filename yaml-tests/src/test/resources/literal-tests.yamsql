#
# literal-tests.yamsql
#
# This source file is part of the FoundationDB open source project
#
# Copyright 2021-2024 Apple Inc. and the FoundationDB project authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
options:
    supported_version: 4.3.6.0
---
schema_template:
    create table B(b1 integer, b2 string, b3 bigint, primary key(b1))
---
setup:
  steps:
    - query: insert into B values
        (1I, 'a', 2L),
        (3i, 'b', 4l),
        (5, 'c', 6)
---
test_block:
  preset: single_repetition_ordered
  tests:
    -
      - query: select * from B where 6L = coalesce(5L, 6L)
      - explain: "SCAN(<,>) | FILTER coalesce_long(@c10, @c6) EQUALS @c6"
      - result: []
    -
      - query: select * from B where 6 = coalesce(5, 6)
      - explain: "SCAN(<,>) | FILTER coalesce_int(@c10, @c6) EQUALS @c6"
      - result: []
---
test_block:
  preset: single_repetition_parallelized
  tests:
    -
      - query: select * from B;
      - result: [{1, 'a', !l 2},
                 {3, 'b', !l 4},
                 {5, 'c', !l 6}]
    -
      - query: select * from B where 6L = coalesce(5L, 6L)
      - explain: "SCAN(<,>) | FILTER coalesce_long(@c10, @c6) EQUALS @c6"
      - result: []
    -
      - query: select * from B where 6L = coalesce(5I, 6I)
      - explain: "SCAN(<,>) | FILTER promote(coalesce_int(@c10, @c12) AS LONG) EQUALS @c6"
      - result: []
    -
      - query: select * from B where 6L = coalesce(5, 6)
      - explain: "SCAN(<,>) | FILTER promote(coalesce_int(@c10, @c12) AS LONG) EQUALS @c6"
      - result: []
    -
      - query: select * from B where 6 = coalesce(5L, 6)
      - explain: "SCAN(<,>) | FILTER coalesce_long(@c10, promote(@c6 AS LONG)) EQUALS promote(@c6 AS LONG)"
      - result: []
    -
      - query: select * from B where 6I = coalesce(5L, 6I)
      - explain: "SCAN(<,>) | FILTER coalesce_long(@c10, promote(@c6 AS LONG)) EQUALS promote(@c6 AS LONG)"
      - result: []
    -
      - query: select * from B where 6i = coalesce(5l, 6i)
      - explain: "SCAN(<,>) | FILTER coalesce_long(@c10, promote(@c6 AS LONG)) EQUALS promote(@c6 AS LONG)"
      - result: []
    -
      - query: select * from B where 6 = coalesce(5, 6)
      - explain: "SCAN(<,>) | FILTER coalesce_int(@c10, @c6) EQUALS @c6"
      - result: []
...
