#
# groupby-tests.yamsql
#
# This source file is part of the FoundationDB open source project
#
# Copyright 2021-2024 Apple Inc. and the FoundationDB project authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
schema_template:
    create table t1(id bigint, col1 bigint, col2 bigint, primary key(id))
    create index i1 as select col1 from t1
    create type as struct st1(y bigint, z bigint)
    create type as struct st2(w bigint, x bigint)
    create type as struct st3(u st2, v st1)
    create type as struct st4(s bigint, t bigint)
    create table nested(id bigint, q st4, r st3, primary key(q.s, r.u.w))
    create index i2 as select r.v.z from nested order by r.v.z
---
setup:
  steps:
    - query: INSERT INTO T1
        VALUES (1, 10, 1),
               (2, 10, 2),
               (3, 10, 3),
               (4, 10, 4),
               (5, 10, 5),
               (6, 20, 6),
               (7, 20, 7),
               (8, 20, 8),
               (9, 20, 9),
               (10, 20, 10),
               (11, 20, 11),
               (12, 20, 12),
               (13, 20, 13)
    - query: INSERT INTO NESTED
        VALUES (1, (200, 1), ((5, 15), (10, 100))),
               (2, (201, 2), ((5, 15), (10, 100))),
               (3, (202, 3), ((5, 15), (10, 100))),
               (4, (203, 4), ((5, 15), (10, 100))),
               (5, (330, 5), ((5, 15), (10, 140))),
               (6, (329, 6), ((5, 15), (10, 140))),
               (7, (328, 7), ((5, 15), (10, 140))),
               (8, (327, 8), ((5, 15), (10, 140)))
---
test_block:
  name: group-by-tests
  tests:
    -
      - query: select max(q.s) from nested group by r.v.z having r.v.z > 120
      # Plans did not serialize before 4.1.9.0 due to: https://github.com/FoundationDB/fdb-record-layer/issues/3214
      - supported_version: 4.1.9.0
      - result: [{330}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select max(q.s) from nested group by r.v.z having r.v.z > 120
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{330}]
      - result: []
      - initialVersionAtLeast: 4.1.9.0
      # Handled in prior test case
    -
      - query: select max(id) from t1 group by col1 having min(id) > 0 and col1 = 20;
      # Plans did not serialize before 4.1.9.0 due to: https://github.com/FoundationDB/fdb-record-layer/issues/3214
      - supported_version: 4.1.9.0
      - result: [{13}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select max(id) from t1 group by col1 having min(id) > 0 and col1 = 20;
      # Plans did not serialize before 4.1.9.0 due to: https://github.com/FoundationDB/fdb-record-layer/issues/3214
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{13}]
      - result: []
      - initialVersionAtLeast: 4.1.9.0
      # Handled in prior test case
    -
      - query: select max(id) from t1 group by col1
      # Plans did not serialize before 4.1.9.0 due to: https://github.com/FoundationDB/fdb-record-layer/issues/3214
      - supported_version: 4.1.9.0
      - result: [{5}, {13}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select max(id) from t1 group by col1
      # Plans did not serialize before 4.1.9.0 due to: https://github.com/FoundationDB/fdb-record-layer/issues/3214
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{5}]
      - result: [{13}]
      - error: 'XX000'
      - initialVersionAtLeast: 4.1.9.0
      # Handled in prior test case
#    -
#        # grouping by constant is not yet supported.
#      - query: select sum(col2) from T1 group by 3;
#      - result: [{!l 210}]
    -
      - query: select * from T1 group by col1;
      - error: "42803"
    -
      - query: select ID from T1 group by col1;
      - error: "42803"
    -
      - query: select BLA from T1 group by col1;
      - error: "42703"
    -
      - query: select col1 from T1 group by col1;
      - result: [{COL1: !l 10}, {COL1: !l 20}]
    -
      - query: select col1 from T1 group by col1 AS Y;
      - result: [{COL1: !l 10}, {COL1: !l 20}]
    -
      - query: select Y from T1 group by col1 AS Y;
      - result: [{Y: !l 10}, {Y: !l 20}]
    -
      - query: select * from (select col1 from T1) as X group by col1;
      - result: [{COL1: !l 10}, {COL1: !l 20}]
    -
      - query: select * from (select col1 from T1) as X group by col1 AS Y;
      - result: [{COL1: !l 10}, {COL1: !l 20}]
    -
      - query: select col1 as XX from T1 group by col1;
      - result: [{XX: !l 10}, {XX: !l 20}]
    -
      # named group by columns resolution rule gives precedence to the SELECT
      - query: select col1 as XX from T1 group by col1 AS YY;
      - result: [{XX: !l 10}, {XX: !l 20}]
    -
      - query: select YY as XX from T1 group by col1 AS YY;
      - result: [{XX: !l 10}, {XX: !l 20}]
    -
      - query: select x from T1 group by col1 as x;
      - result: [{!l 10}, {!l 20}]
    -
      - query: select col1 from (select col1 from t1) as x group by col1;
      - result: [{!l 10}, {!l 20}]
    -
      - query: select y from (select col1 from t1) as x group by col1 as y;
      - result: [{!l 10}, {!l 20}]
    -
      - query: select col1 from (select col1 from t1) as x group by x.col1;
      - result: [{!l 10}, {!l 20}]
    -
      - query: select MAX(x.col1) from (select col1 from t1) as x group by x.col1;
      # Plans did not serialize before 4.1.9.0 due to: https://github.com/FoundationDB/fdb-record-layer/issues/3214
      - supported_version: 4.1.9.0
      - result: [{!l 10}, {!l 20}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select MAX(x.col1) from (select col1 from t1) as x group by x.col1;
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{!l 10}]
      - result: [{!l 20}]
      - error: 'XX000'
      - initialVersionAtLeast: 4.1.9.0
    -
      - query: select MAX(z) from (select col1 from t1) as x group by x.col1 as z;
      # Plans did not serialize before 4.1.9.0 due to: https://github.com/FoundationDB/fdb-record-layer/issues/3214
      - supported_version: 4.1.9.0
      - result: [{!l 10}, {!l 20}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select MAX(z) from (select col1 from t1) as x group by x.col1 as z;
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{!l 10}]
      - result: [{!l 20}]
      - error: 'XX000'
      - initialVersionAtLeast: 4.1.9.0
    -
      - query: select MAX(x.col2) from (select col1,col2 from t1) as x group by x.col1;
      # Plans did not serialize before 4.1.9.0 due to: https://github.com/FoundationDB/fdb-record-layer/issues/3214
      - supported_version: 4.1.9.0
      - result: [{!l 5}, {!l 13}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select MAX(x.col2) from (select col1,col2 from t1) as x group by x.col1;
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{!l 5}]
      - result: [{!l 13}]
      - error: 'XX000'
      - initialVersionAtLeast: 4.1.9.0
    -
      - query: select MIN(x.col2) from (select col1,col2 from t1) as x group by x.col1;
      # Plans did not serialize before 4.1.9.0 due to: https://github.com/FoundationDB/fdb-record-layer/issues/3214
      - supported_version: 4.1.9.0
      - result: [{!l 1}, {!l 6}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select MIN(x.col2) from (select col1,col2 from t1) as x group by x.col1;
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{!l 1}]
      - result: [{!l 7}] # Off by one from https://github.com/FoundationDB/fdb-record-layer/issues/3097 also fixed in 4.1.9.0
      - error: 'XX000'
      - initialVersionAtLeast: 4.1.9.0
    -
      - query: select COUNT(x.col2) from (select col1,col2 from t1) as x group by x.col1;
      # Plans did not serialize before 4.1.9.0 due to: https://github.com/FoundationDB/fdb-record-layer/issues/3214
      - supported_version: 4.1.9.0
      - result: [{!l 5}, {!l 8}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select COUNT(x.col2) from (select col1,col2 from t1) as x group by x.col1;
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{!l 5}]
      - result: [{!l 7}] # Off by one from https://github.com/FoundationDB/fdb-record-layer/issues/3097 also fixed in 4.1.9.0
      - error: 'XX000'
      - initialVersionAtLeast: 4.1.9.0
    -
      - query: select AVG(x.col2) from (select col1,col2 from t1) as x group by x.col1;
      - explain: "ISCAN(I1 <,>) | MAP ((_.COL1 AS COL1, _.COL2 AS COL2) AS _0) | AGG (avg_l(_._0.COL2) AS _0) GROUP BY (_._0.COL1 AS _0) | MAP (_._1._0 AS _0)"
      - maxRows: 0 # Disable force_continuations. Can be removed when we longer care about testing with versions older than 4.1.9.0
      - result: [{3.0}, {9.5}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select AVG(x.col2) from (select col1,col2 from t1) as x group by x.col1;
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{3.0}]
      - result: [{10.0}] # Incorrect value because of off-by-one: https://github.com/FoundationDB/fdb-record-layer/issues/3097
      - result: []
      - initialVersionAtLeast: 4.1.9.0
      - result: [{3.0}]
      - result: [{9.5}]
      - result: []
    -
      - query: select SUM(x.col2) from (select col1,col2 from t1) as x group by x.col1;
      # Plans did not serialize before 4.1.9.0 due to: https://github.com/FoundationDB/fdb-record-layer/issues/3214
      - supported_version: 4.1.9.0
      - result: [{!l 15}, {!l 76}]
    -
      # Same as test above, but allows for testing upgrading continuations from before 4.1.9.0
      # Can be removed when we no longer care about that mixed-mode path
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select SUM(x.col2) from (select col1,col2 from t1) as x group by x.col1;
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{!l 15}]
      - result: [{!l 70}] # Off by one from https://github.com/FoundationDB/fdb-record-layer/issues/3097 also fixed in 4.1.9.0
      - error: 'XX000'
      - initialVersionAtLeast: 4.1.9.0
    -
      # result is correct since we don't use (not support, yet) explicit casting.
      - query: select SUM(x.col2) / COUNT(x.col2), AVG(x.col2) from (select col1,col2 from t1) as x group by x.col1;
      - explain: "ISCAN(I1 <,>) | MAP ((_.COL1 AS COL1, _.COL2 AS COL2) AS _0) | AGG (sum_l(_._0.COL2) AS _0, count(_._0.COL2) AS _1, avg_l(_._0.COL2) AS _2) GROUP BY (_._0.COL1 AS _0) | MAP (_._1._0 / _._1._1 AS _0, _._1._2 AS _1)"
      - maxRows: 0 # Disable force_continuations. Can be removed when we longer care about testing with versions older than 4.1.9.0
      - result: [{!l 3, 3.0}, {!l 9, 9.5}]
    -
      # Duplicate of above but with simulation of force_continuations mode. Can be removed after we no longer
      # care about mixed-mode testing with versions before 4.1.9.0
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select SUM(x.col2) / COUNT(x.col2), AVG(x.col2) from (select col1,col2 from t1) as x group by x.col1;
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{!l 3, 3.0}]
      - result: [{!l 10, 10.0}] # Incorrect value due to off-by-one: https://github.com/FoundationDB/fdb-record-layer/issues/3097
      - result: []
      - initialVersionAtLeast: 4.1.9.0
      - result: [{!l 3, 3.0}]
      - result: [{!l 9, 9.5}]
      - result: []
    -
      - query: select MAX(x.col2) from (select col1 from t1) as x group by x.col1;
      - error: "42703"
    -
      - query: select X.col2 from (select  col1, col2 from t1) as x group by x.col1;
      - error: "42803"
    -
      - query: select MAX(x.col2) from (select col1,col2 from t1) as x;
      - explain: "ISCAN(I1 <,>) | MAP ((_.COL1 AS COL1, _.COL2 AS COL2) AS _0) | AGG (max_l(_._0.COL2) AS _0) | ON EMPTY NULL | MAP (_._0._0 AS _0)"
      - maxRows: 0 # Disable force_continuations. Can be removed when we longer care about testing with versions older than 4.1.9.0
      - result: [{!l 13}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select MAX(x.col2) from (select col1,col2 from t1) as x;
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{!l 13}]
      - result: [{!null _}]
      - result: [{!l 13}] # ad infinitum. Due to incorrect continuation serialization identified in: https://github.com/FoundationDB/fdb-record-layer/issues/3096
      - initialVersionAtLeast: 4.1.9.0
      - result: [{!l 13}]
      - result: []
    -
      - query: select MIN(x.col2) from (select col1,col2 from t1) as x;
      - explain: "ISCAN(I1 <,>) | MAP ((_.COL1 AS COL1, _.COL2 AS COL2) AS _0) | AGG (min_l(_._0.COL2) AS _0) | ON EMPTY NULL | MAP (_._0._0 AS _0)"
      - maxRows: 0 # Disable force_continuations. Can be removed when we longer care about testing with versions older than 4.1.9.0
      - result: [{!l 1}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select MIN(x.col2) from (select col1,col2 from t1) as x;
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{!l 1}]
      - result: [{!null _}]
      - result: [{!l 1}] # ad infinitum. Due to incorrect continuation serialization identified in: https://github.com/FoundationDB/fdb-record-layer/issues/3096
      - initialVersionAtLeast: 4.1.9.0
      - result: [{!l 1}]
      - result: []
    -
      - query: select COUNT(x.col2) from (select col1,col2 from t1) as x;
      - explain: "ISCAN(I1 <,>) | MAP ((_.COL1 AS COL1, _.COL2 AS COL2) AS _0) | AGG (count(_._0.COL2) AS _0) | ON EMPTY NULL | MAP (coalesce_long(_._0._0, promote(0l AS LONG)) AS _0)"
      - maxRows: 0 # Disable force_continuations. Can be removed when we longer care about testing with versions older than 4.1.9.0
      - result: [{!l 13}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select COUNT(x.col2) from (select col1,col2 from t1) as x;
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{!l 13}]
      - result: [{!l 0}]
      - result: [{!l 13}] # ad infinitum. Due to incorrect continuation serialization identified in: https://github.com/FoundationDB/fdb-record-layer/issues/3096
      - initialVersionAtLeast: 4.1.9.0
      - result: [{!l 13}]
      - result: []
    -
      - query: select AVG(x.col2) from (select col1,col2 from t1) as x;
      - explain: "ISCAN(I1 <,>) | MAP ((_.COL1 AS COL1, _.COL2 AS COL2) AS _0) | AGG (avg_l(_._0.COL2) AS _0) | ON EMPTY NULL | MAP (_._0._0 AS _0)"
      - maxRows: 0 # Disable force_continuations. Can be removed when we longer care about testing with versions older than 4.1.9.0
      - result: [{7.0}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select AVG(x.col2) from (select col1,col2 from t1) as x;
      - explain: "ISCAN(I1 <,>) | MAP ((_.COL1 AS COL1, _.COL2 AS COL2) AS _0) | AGG (avg_l(_._0.COL2) AS _0) | ON EMPTY NULL | MAP (_._0._0 AS _0)"
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{7.0}]
      - result: [{!null _}]
      - result: [{7.0}] # ad infinitum. Due to incorrect continuation serialization identified in: https://github.com/FoundationDB/fdb-record-layer/issues/3096
      - initialVersionAtLeast: 4.1.9.0
      - result: [{7.0}]
      - result: []
    -
      - query: select x.col1 + 10 from (select col1 from t1) as x group by x.col1;
      - result: [{!l 20}, {!l 30}]
    -
      - query: select x.col1 + x.col2 from (select col1, col2 from t1) as x group by x.col1;
      - error: "42803"
    -
      - query: select x.col1 + x.col1 from (select col1, col2 from t1) as x group by x.col1;
      - result: [{!l 20}, {!l 40}]
    -
      - query: select G + 4 from (select MIN(x.col2) as G from (select col1,col2 from t1) as x group by x.col1) as Y where G > 5;
      # Plans did not serialize before 4.1.9.0 due to: https://github.com/FoundationDB/fdb-record-layer/issues/3214
      - supported_version: 4.1.9.0
      - result: [{!l 10}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select G + 4 from (select MIN(x.col2) as G from (select col1,col2 from t1) as x group by x.col1) as Y where G > 5;
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{!l 10}]
      - result: []
      - initialVersionAtLeast: 4.1.9.0
    -
      - query: select G + 4 from (select MIN(x.col2) as G from (select col1,col2 from t1) as x group by x.col1 as K) as Y where G > 5;
      # Plans did not serialize before 4.1.9.0 due to: https://github.com/FoundationDB/fdb-record-layer/issues/3214
      - supported_version: 4.1.9.0
      - result: [{!l 10}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select G + 4 from (select MIN(x.col2) as G from (select col1,col2 from t1) as x group by x.col1 as K) as Y where G > 5;
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{!l 10}]
      - result: []
      - initialVersionAtLeast: 4.1.9.0
    -
      - query: select COUNT(*) from T1;
      - explain: "ISCAN(I1 <,>) | MAP (_ AS _0) | AGG (count_star(*) AS _0) | ON EMPTY NULL | MAP (coalesce_long(_._0._0, promote(0l AS LONG)) AS _0)"
      - maxRows: 0 # Disable force_continuations. Can be removed when we longer care about testing with versions older than 4.1.9.0
      - result: [{!l 13}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select COUNT(*) from T1;
      - explain: "ISCAN(I1 <,>) | MAP (_ AS _0) | AGG (count_star(*) AS _0) | ON EMPTY NULL | MAP (coalesce_long(_._0._0, promote(0l AS LONG)) AS _0)"
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{!l 13}]
      - result: [{!l 0}]
      - result: [{!l 13}] # ad infinitum. Due to incorrect continuation serialization identified in: https://github.com/FoundationDB/fdb-record-layer/issues/3096
      - initialVersionAtLeast: 4.1.9.0
      - result: [{!l 13}]
      - result: []
    -
      - query: select COUNT(col1) from T1;
      - explain: "ISCAN(I1 <,>) | MAP (_ AS _0) | AGG (count(_._0.COL1) AS _0) | ON EMPTY NULL | MAP (coalesce_long(_._0._0, promote(0l AS LONG)) AS _0)"
      - maxRows: 0 # Disable force_continuations. Can be removed when we longer care about testing with versions older than 4.1.9.0
      - result: [{!l 13}]
    -
      # Same as above but simulates force_continuations mode. Can be removed after we no longer care about compatibility with versions before 4.1.9.0
      - query: select COUNT(col1) from T1;
      - explain: "ISCAN(I1 <,>) | MAP (_ AS _0) | AGG (count(_._0.COL1) AS _0) | ON EMPTY NULL | MAP (coalesce_long(_._0._0, promote(0l AS LONG)) AS _0)"
      - maxRows: 1
      - initialVersionLessThan: 4.1.9.0
      - result: [{!l 13}]
      - result: [{!l 0}]
      - result: [{!l 13}] # ad infinitum. Due to incorrect continuation serialization identified in: https://github.com/FoundationDB/fdb-record-layer/issues/3096
      - initialVersionAtLeast: 4.1.9.0
      - result: [{!l 13}]
      - result: []
    -
      - query: select x from t1 group by col1 as x, col2 as x;
      - error: "42702"
...
