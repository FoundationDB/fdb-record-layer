/*
 * fdb-relational-jdbc.gradle
 *
 * This source file is part of the FoundationDB open source project
 *
 * Copyright 2015-2024 Apple Inc. and the FoundationDB project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "com.github.harbby.gradle.serviceloader" version "1.1.8"
    id 'com.github.johnrengelman.shadow' version "${shadowPluginVersion}"
}

description = 'The Relational JDBC Driver; has no FDB nor Record Layer dependencies.'

apply from: rootProject.file('gradle/publishing.gradle')

dependencies {
    implementation project(":fdb-relational-api")
    implementation project(":fdb-relational-grpc")
    implementation "io.grpc:grpc-inprocess:${grpcVersion}"
    implementation "io.grpc:grpc-netty:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"
    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    implementation "io.dropwizard.metrics:metrics-core:${dropwizardVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    // Server in the TEST context ONLY!!
    testImplementation project(":fdb-relational-server")
    testImplementation(testFixtures(project(":fdb-relational-server")))
    // FDB Relational core test fixture in the TEST context only -- not in main!!!!
    testImplementation(testFixtures(project(":fdb-relational-core")))
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
    // slf4j binding. Allows RL dependencies to log to same place as the relational server
    testRuntimeOnly("org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}")
    testRuntimeOnly("org.apache.logging.log4j:log4j-core:${log4jVersion}")
}

serviceLoader {
    serviceInterface 'java.sql.Driver'
}

jar {
    duplicatesStrategy "exclude"
}

// Task to build a fat jar, one w/ all dependencies; good for handing out as the 'jdbc' jar.
shadowJar {
    archiveClassifier.set('driver')
    mergeServiceFiles()
}

build.dependsOn {
    shadowJar
}

createDistribution.configure {
    afterEvaluate {
        dependsOn shadowJar
        from tasks.shadowJar
    }
}

publishing {
    publications {
        // Note: in new versions this changes, see docs:
        // https://gradleup.com/shadow/publishing/#publishing-with-maven-publish-plugin
        shadow(MavenPublication) { publication ->
            from project.shadow.component(publication)
        }
    }
}
