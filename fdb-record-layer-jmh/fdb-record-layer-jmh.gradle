/*
 * fdb-record-layer-jmh.gradle
 *
 * This source file is part of the FoundationDB open source project
 *
 * Copyright 2021 Apple Inc. and the FoundationDB project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'me.champeau.jmh' version '0.6.7'
}

apply from: rootProject.file('gradle/proto.gradle')
sourceSets {
    jmh {
        proto {
            srcDir "src/jmh/proto"
        }
        java {
            srcDir 'protogen/jmh/java'
        }
    }
}

def coreProject = ":${ext.coreProjectName}"
dependencies {
    api project(coreProject)
    implementation project(":fdb-record-layer-lucene")
    compileOnly "com.google.code.findbugs:jsr305:${jsr305Version}"

    testRuntimeOnly("org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}") {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }

    testRuntimeOnly "org.apache.logging.log4j:log4j-core:${log4jVersion}"

    implementation("com.sun.mail:javax.mail:${mailVersion}")

    jmhAnnotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:1.35"

}

jmh {
    environment = rootProject.ext.fdbEnvironment
    includes = ["${jmhIncludes}"]
    threads = jmhThreads as Integer
    if(project.hasProperty('iterTime')){
        timeOnIteration =iterTime
    }
}

jmhJar {
}

project.tasks.named("processJmhResources") {
   duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
