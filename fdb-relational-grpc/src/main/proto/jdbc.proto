/*
 * jdbc.proto
 *
 * This source file is part of the FoundationDB open source project
 *
 * Copyright 2021-2024 Apple Inc. and the FoundationDB project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

import "google/spanner/v1/result_set.proto";

option java_multiple_files = true;
// Put the generated classes into grpc subpackage so I can exclude
// these classes from checkstyle and spotbug checks.
option java_package = "com.apple.foundationdb.relational.grpc.jdbc.v1";
option java_outer_classname = "RelationalJDBCService";

package grpc.relational.jdbc.v1;

service JDBCService {
  rpc getMetaData(DatabaseMetaDataRequest) returns (DatabaseMetaDataResponse) {}
  rpc execute(StatementRequest) returns (StatementResponse) {}
  rpc update(StatementRequest) returns (StatementResponse) {}
}

/**
 * Message to carry a SQLException over rpc.
 */
message SQLException {
  string name = 1;
  int32 error_code = 2;
  string message = 3;
  string sql_state = 4;
  string cause = 5;
}

message StatementRequest {
  string sql = 1;
  string database = 2;
  string schema = 3;
}

// FYI: RS from Spanner https://github.com/googleapis/googleapis/blob/master/google/spanner/v1/result_set.proto
message StatementResponse {
  int32 row_count = 1;
  google.spanner.v1.ResultSet result_set = 2;
}

message DatabaseMetaDataRequest {}
message DatabaseMetaDataResponse {
  string url = 1;
  string database_product_version = 2;

      // From https://docs.oracle.com/en/java/javase/12/docs/api/java.sql/java/sql/DatabaseMetaData.html
      // 
      // Being careful about what we expose. Only add attributes that make sense for relational.
      // Throw not implemented for all else.
      //
      // static int	bestRowNotPseudo
      // static int	bestRowPseudo
      // static int	bestRowSession
      // static int	bestRowTemporary
      // static int	bestRowTransaction
      // static int	bestRowUnknown
      // static int	columnNoNulls
      // static int	columnNullable
      // static int	columnNullableUnknown
      // static int	functionColumnIn
      // static int	functionColumnInOut
      // static int	functionColumnOut
      // static int	functionColumnResult
      // static int	functionColumnUnknown
      // static int	functionNoNulls
      // static int	functionNoTable
      // static int	functionNullable
      // static int	functionNullableUnknown
      // static int	functionResultUnknown
      // static int	functionReturn
      // static int	functionReturnsTable
      // static int	importedKeyCascade
      // static int	importedKeyInitiallyDeferred
      // static int	importedKeyInitiallyImmediate
      // static int	importedKeyNoAction
      // static int	importedKeyNotDeferrable
      // static int	importedKeyRestrict
      // static int	importedKeySetDefault
      // static int	importedKeySetNull
      // static int	procedureColumnIn
      // static int	procedureColumnInOut
      // static int	procedureColumnOut
      // static int	procedureColumnResult
      // static int	procedureColumnReturn
      // static int	procedureColumnUnknown
      // static int	procedureNoNulls
      // static int	procedureNoResult
      // static int	procedureNullable
      // static int	procedureNullableUnknown
      // static int	procedureResultUnknown
      // static int	procedureReturnsResult
      // static int	sqlStateSQL
      // static int	sqlStateSQL99
      // static int	sqlStateXOpen
      // static short	tableIndexClustered
      // static short	tableIndexHashed
      // static short	tableIndexOther
      // static short	tableIndexStatistic
      // static int	typeNoNulls
      // static int	typeNullable
      // static int	typeNullableUnknown
      // static int	typePredBasic
      // static int	typePredChar
      // static int	typePredNone
      // static int	typeSearchable
      // static int	versionColumnNotPseudo
      // static int	versionColumnPseudo
      // static int	versionColumnUnknown
      // etc.
}
